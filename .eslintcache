[{"C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\index.js":"1","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\App.js":"2","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Home.js":"3","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Authentication\\Wrapper.js":"4","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\reducers\\index.js":"5","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\reducers\\auth.js":"6","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\actions\\auth.js":"7","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\api\\index.js":"8","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\reducers\\post.js":"9","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\actions\\post.js":"10","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\actions\\profile.js":"11","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\reducers\\profile.js":"12","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\reducers\\users.js":"13","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\actions\\users.js":"14","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\reducers\\editpost.js":"15","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Friends\\FriendsChild.js":"16","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Authentication\\SignupContainer.js":"17","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Authentication\\Signup.js":"18","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Authentication\\LoginContainer.js":"19","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Authentication\\Login.js":"20","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\MyRouter.js":"21","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Profile\\ProfileContainer.js":"22","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Profile\\Profile.js":"23","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Profile\\Editprofile\\EditprofileContainer.js":"24","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Profile\\Editprofile\\Editprofile.js":"25","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Profile\\Editprofile\\EditProfile.js":"26","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Friends\\FriendsContainer.js":"27","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Friends\\Friends.js":"28","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Posts\\PostsContainer.js":"29","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Posts\\Posts.js":"30","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Posts\\Post\\PostContainer.js":"31","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Posts\\Post\\Post.js":"32","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Posts\\Post\\comments\\CommentsContainer.js":"33","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Posts\\Post\\comments\\Comments.js":"34"},{"size":500,"mtime":1610138205583,"results":"35","hashOfConfig":"36"},{"size":1468,"mtime":1611125117431,"results":"37","hashOfConfig":"36"},{"size":805,"mtime":1611067924667,"results":"38","hashOfConfig":"36"},{"size":1325,"mtime":1611121073727,"results":"39","hashOfConfig":"36"},{"size":330,"mtime":1611126997200,"results":"40","hashOfConfig":"36"},{"size":579,"mtime":1611036574312,"results":"41","hashOfConfig":"36"},{"size":872,"mtime":1611035728472,"results":"42","hashOfConfig":"36"},{"size":2224,"mtime":1611035860841,"results":"43","hashOfConfig":"36"},{"size":1582,"mtime":1611126994336,"results":"44","hashOfConfig":"36"},{"size":2349,"mtime":1611035764123,"results":"45","hashOfConfig":"36"},{"size":1592,"mtime":1611035825457,"results":"46","hashOfConfig":"36"},{"size":341,"mtime":1611126993669,"results":"47","hashOfConfig":"36"},{"size":262,"mtime":1611126917335,"results":"48","hashOfConfig":"36"},{"size":281,"mtime":1611035837422,"results":"49","hashOfConfig":"36"},{"size":337,"mtime":1611126998711,"results":"50","hashOfConfig":"36"},{"size":8197,"mtime":1611123232926,"results":"51","hashOfConfig":"36"},{"size":2935,"mtime":1611121514610,"results":"52","hashOfConfig":"36"},{"size":9311,"mtime":1611121532932,"results":"53","hashOfConfig":"36"},{"size":1151,"mtime":1611121733332,"results":"54","hashOfConfig":"36"},{"size":3426,"mtime":1611121729887,"results":"55","hashOfConfig":"36"},{"size":3650,"mtime":1611121862228,"results":"56","hashOfConfig":"36"},{"size":1598,"mtime":1611122104915,"results":"57","hashOfConfig":"36"},{"size":4006,"mtime":1611123619022,"results":"58","hashOfConfig":"36"},{"size":3926,"mtime":1611122894747,"results":"59","hashOfConfig":"36"},{"size":6934,"mtime":1611068760293,"results":"60","hashOfConfig":"36"},{"size":8187,"mtime":1611122969623,"results":"61","hashOfConfig":"36"},{"size":918,"mtime":1611126992881,"results":"62","hashOfConfig":"36"},{"size":2739,"mtime":1611123219471,"results":"63","hashOfConfig":"36"},{"size":7659,"mtime":1611124159387,"results":"64","hashOfConfig":"36"},{"size":10181,"mtime":1611124135356,"results":"65","hashOfConfig":"36"},{"size":4581,"mtime":1611124204939,"results":"66","hashOfConfig":"36"},{"size":6740,"mtime":1611128775884,"results":"67","hashOfConfig":"36"},{"size":1317,"mtime":1611124605690,"results":"68","hashOfConfig":"36"},{"size":3638,"mtime":1611124607715,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"wryd8y",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\index.js",[],["148","149"],"C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\App.js",[],"C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Home.js",[],"C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Authentication\\Wrapper.js",[],"C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\reducers\\index.js",[],"C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\reducers\\auth.js",[],"C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\actions\\auth.js",[],"C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\api\\index.js",[],"C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\reducers\\post.js",[],"C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\actions\\post.js",[],"C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\actions\\profile.js",[],"C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\reducers\\profile.js",[],"C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\reducers\\users.js",[],"C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\actions\\users.js",[],"C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\reducers\\editpost.js",[],"C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Friends\\FriendsChild.js",["150"],"import React, { useEffect } from 'react'\r\nimport '../../../Assets/styles/styles.css'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addFriend, acceptRequest, declineRequest } from '../../../actions/profile'\r\nimport PropTypes from 'prop-types';\r\nimport { motion } from \"framer-motion\"\r\n\r\nconst friendChildVariants = {\r\n    hidden:\r\n    {\r\n        y: \"-10vw\",\r\n        opacity: 0\r\n    },\r\n    visible: {\r\n        y: 0,\r\n        opacity: 1,\r\n        transition: {\r\n            type: \"spring\",\r\n            delay: 0.2\r\n        }\r\n    },\r\n}\r\n\r\nfunction FriendsChild({ option }) {\r\n\r\n    const friends = useSelector(state => state.profile.friends)\r\n    const friendRequests = useSelector(state => state.profile.friendRequests)\r\n    const users = useSelector(state => state.users)\r\n    const dispatch = useDispatch()\r\n\r\n    const addFriendHandler = async (e, _id) => {\r\n        e.preventDefault()\r\n        await dispatch(addFriend({ _id: _id }))\r\n\r\n    }\r\n\r\n    const acceptRequestHandler = async (e, friend) => {\r\n\r\n        e.preventDefault()\r\n        await dispatch(acceptRequest({ _id: friend._id, uid: friend.uid }))\r\n\r\n    }\r\n\r\n    const declineRequestHandler = async (e, friend) => {\r\n\r\n        e.preventDefault()\r\n        await dispatch(declineRequest({ _id: friend._id, uid: friend.uid }))\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n\r\n        }\r\n    }, [])\r\n\r\n\r\n    switch (option) {\r\n\r\n        case 'list':\r\n            return (\r\n                <motion.div className='' style={{ 'padding': \"0px 20px\" }}\r\n                    variants={friendChildVariants}\r\n                    animate=\"visible\"\r\n                    initial=\"hidden\">\r\n\r\n\r\n                    {friends && friends.length > 0 ?\r\n\r\n                        <ul class=\"collection\">\r\n\r\n                            {\r\n                                friends.map(\r\n\r\n                                    (friend, id) =>\r\n\r\n                                        (\r\n                                            <>\r\n                                                <li class=\"collection-item avatar\" style={{ \"margin\": \"10px\" }}>\r\n                                                    <img src={friend.userProfilePicture} style={{ \"margin-top\": \"10px\" }} alt=\"\" class=\"circle\" />\r\n                                                    <h5 class=\"\">{friend.user} </h5>\r\n                                                    <p>{friend.mobileNumber} <br></br>\r\n                                                    </p>\r\n                                                    <a href=\"#\" class=\"btn-floating indigo secondary-content\"><i style={{ \"font-size\": \"30px\" }} class=\"material-icons right \">account_circle</i>Info</a>\r\n                                                </li>\r\n                                            </>\r\n\r\n                                        )\r\n\r\n\r\n                                )\r\n                            }\r\n                        </ul>\r\n\r\n                        : <div className='container center white' style={{ \"padding\": \"20px\" }}>\r\n\r\n                            <h5>{friends && friends.length === 0 && 'No Friends Yet'}</h5>\r\n                        </div>}\r\n\r\n                    {/* <ul class=\"collection\">\r\n                        <li class=\"collection-item avatar\">\r\n                        <img src=\"images/yuna.jpg\" alt=\"\" class=\"circle\" />\r\n                        <span class=\"title\">Title</span>\r\n                        <p>First Line <br></br>\r\n                            Second Line\r\n                        </p>\r\n                        <a href=\"#!\" class=\"secondary-content\"><i class=\"material-icons\">grade</i></a>\r\n                        </li>\r\n                    </ul> */}\r\n\r\n                </motion.div>\r\n            )\r\n\r\n        case 'requests':\r\n            return (\r\n                <motion.div className='' style={{ 'padding': \"0px 20px\" }}\r\n                    variants={friendChildVariants}\r\n                    animate=\"visible\"\r\n                    initial=\"hidden\">\r\n\r\n\r\n                    {friendRequests && friendRequests.length > 0 ?\r\n\r\n                        <ul class=\"collection\">\r\n\r\n                            {\r\n                                friendRequests.map(\r\n\r\n                                    request =>\r\n\r\n                                        (\r\n                                            <>\r\n                                                <li class=\"collection-item avatar\" style={{ \"margin\": \"10px\" }}>\r\n                                                    <img src={request.userProfilePicture} style={{ \"margin-top\": \"10px\" }} alt=\"\" class=\"circle\" />\r\n                                                    <h5 class=\"\">{request.user} </h5>\r\n                                                    <p><button className='btn-small indigo '\r\n                                                        onClick={(e) => { acceptRequestHandler(e, request) }}>Add Friend</button>\r\n\r\n                                                        <button className='btn-small red lighten-1' style={{ \"margin-left\": \"20px\" }}\r\n                                                            onClick={(e) => { declineRequestHandler(e, request) }}>Decline</button>\r\n                                                    </p>\r\n\r\n                                                    <a href=\"#!\" class=\"secondary-content\"><i class=\"material-icons\">user</i></a>\r\n                                                </li>\r\n                                            </>\r\n\r\n                                        )\r\n\r\n\r\n                                )\r\n                            }\r\n                        </ul>\r\n\r\n                        : <div className='container center white' style={{ \"padding\": \"20px\" }}>\r\n\r\n                            <h5>{friendRequests && friendRequests.length === 0 && 'No Friend Requests'}</h5>\r\n                        </div>}\r\n\r\n\r\n\r\n                </motion.div>\r\n            )\r\n\r\n        case 'newFriends':\r\n            return (\r\n                <motion.div className='' style={{ 'padding': \"0px 20px\" }}\r\n                    variants={friendChildVariants}\r\n                    animate=\"visible\"\r\n                    initial=\"hidden\">\r\n\r\n\r\n                    {users && users.length > 0 ?\r\n\r\n                        <ul class=\"collection\">\r\n\r\n                            {\r\n                                users.map(\r\n\r\n                                    user =>\r\n\r\n                                        (\r\n                                            <>\r\n                                                <li class=\"collection-item avatar\" style={{ \"margin\": \"10px\" }}>\r\n                                                    <img src={user.profilePicture} style={{ \"margin-top\": \"10px\" }} alt=\"\" class=\"circle\" />\r\n                                                    <h5 class=\"\">{user.firstName} {user.lastName} </h5>\r\n                                                    <p><button className='btn-small indigo'\r\n                                                        onClick={(e) => {\r\n                                                            addFriendHandler(e, user._id)\r\n                                                        }}>Add Friend</button>\r\n                                                    </p>\r\n                                                    <a href=\"#!\" class=\"secondary-content\"><i class=\"material-icons\">user</i></a>\r\n                                                </li>\r\n                                            </>\r\n\r\n                                        )\r\n\r\n\r\n                                )\r\n                            }\r\n                        </ul>\r\n\r\n                        : <div className='container center white' style={{ \"padding\": \"20px\" }}>\r\n\r\n                            <h5>{users && users.length === 0 && 'No New Users'}</h5>\r\n                        </div>}\r\n\r\n\r\n\r\n                </motion.div>\r\n\r\n            )\r\n\r\n\r\n        default:\r\n            return (\r\n                <div>\r\n                    {option}\r\n\r\n                </div>\r\n            )\r\n\r\n    }\r\n}\r\n\r\n\r\nFriendsChild.propTypes = {\r\n    option: PropTypes.string\r\n}\r\n\r\n\r\nexport default FriendsChild\r\n","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Authentication\\SignupContainer.js",[],"C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Authentication\\Signup.js",[],"C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Authentication\\LoginContainer.js",[],"C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Authentication\\Login.js",["151"],"import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Login({ setDetails, details, error, isLoading, setError, handleSubmit }) {\r\n    return (\r\n        <div className='row upper-padding-small'>\r\n\r\n            <form className='col s12 l6 offset-l3 m8 offset-m2 center white ' style={{ \"padding\": \"50px\" }} onSubmit={(e) => handleSubmit(e)}>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"input-field col s12\">\r\n                        <i class=\"material-icons prefix\">email</i>\r\n                        <input id=\"email\" type=\"email\" className=\"validate\" required={true} value={details.email}\r\n                            onChange={(e) => setDetails({ ...details, email: e.target.value })} />\r\n                        <label for=\"email\">Email</label>\r\n                        <span className=\"helper-text\" data-error=\"Please Enter a valid Email\" data-success=\"\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"input-field col s12\">\r\n                        <i class=\"material-icons prefix\">vpn_key</i>\r\n                        <input id=\"password\" type=\"password\" required={true} className=\"validate\" value={details.password}\r\n                            onChange={(e) => setDetails({ ...details, password: e.target.value })} />\r\n                        <label for=\"password\">Password</label>\r\n                        <span className=\"helper-text\" data-error=\"Please Enter a Password\" data-success=\"\"></span>\r\n                    </div>\r\n                </div>\r\n\r\n                <button className='btn btn-large grey darken-1 hoverable'>Login</button>\r\n\r\n                {error ? (<div className='row grey lighten-5' style={{ \"margin-top\": '30px', 'padding': \"10px\" }}>\r\n                    <p className='center-align red-text'>\r\n                        <a className=\"btn-floating btn btn-small btn-flat transparent\"\r\n                            onClick={() => { setError('') }}><i class=\"material-icons left red-text\">cancel</i>\r\n                        </a>{error}</p>\r\n                </div>) : ''\r\n                }\r\n\r\n                {isLoading ? (\r\n                    <div className=\"row\" style={{ \"margin-top\": \"25px\" }}>\r\n                        <div className=\"preloader-wrapper big active\">\r\n                            <div className=\"spinner-layer spinner-green-only\">\r\n                                <div className=\"circle-clipper left\">\r\n                                    <div className=\"circle\"></div>\r\n                                </div><div className=\"gap-patch\">\r\n                                    <div className=\"circle\"></div>\r\n                                </div><div className=\"circle-clipper right\">\r\n                                    <div className=\"circle\"></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ) : ''}\r\n\r\n            </form>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nLogin.propTypes = {\r\n    details: PropTypes.shape({\r\n        email: PropTypes.string,\r\n        password: PropTypes.string,\r\n    }).isRequired,\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    setDetails: PropTypes.func.isRequired,\r\n    setError: PropTypes.func.isRequired,\r\n    errors: PropTypes.string,\r\n    isLoading: PropTypes.bool\r\n\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\MyRouter.js",["152","153","154","155"],"import React from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport ProfileContainer from './Profile/ProfileContainer'\r\nimport FriendsContainer from './Friends/FriendsContainer'\r\nimport PostsContainer from './Posts/PostsContainer';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction MyRouter({ openNav, handleLogout, closeNav }) {\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <div class=\"navbar-fixed grey darken-4\">\r\n                    <nav class=\"grey darken-4\">\r\n                        <div class=\"nav-wrapper grey darken-4 container\">\r\n                            <a href=\"#\" class=\"brand-logo center\" ><span style={{ \"font-size\": \"25px\" }} class=\"material-icons\">facebook</span></a>\r\n                            <a href=\"#\" data-target=\"mobile-demo\" class=\"sidenav-trigger\" onClick={() => openNav()}><i class=\"material-icons\">menu</i></a>\r\n                            <ul className=\"left hide-on-med-and-down\">\r\n                                <li className=\"hoverlist\">\r\n                                    <Link to=\"/\">Home</Link>\r\n                                </li>\r\n                                <li className=\"hoverlist\">\r\n                                    <Link to=\"/profile\">View Profile</Link>\r\n                                </li>\r\n                                <li className=\"hoverlist\">\r\n                                    <Link to=\"/friends\">View Friends</Link>\r\n                                </li>\r\n                            </ul>\r\n\r\n                            <ul className='right'>\r\n                                <li>\r\n                                    <a style={{ \"padding-top\": \"5px\" }} className='hover-link btn btn-large btn-flat transparent white-text right valign-wrapper'\r\n                                        onClick={(e) => { handleLogout() }}><span class='material-icons right'>logout</span>Logout &nbsp;</a>\r\n                                </li>\r\n                            </ul>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div id=\"mySidenav\" class=\"my-sidenav\">\r\n                            <a href=\"#\" class=\"closebtn\" onClick={() => closeNav()}>&times;</a>\r\n                            <Link to=\"/\" style={{ \"font-size\": \"20px\" }}>Home</Link>\r\n                            <Link to=\"/profile\" style={{ \"font-size\": \"20px\" }}>View Profile</Link>\r\n                            <Link to=\"/friends\" style={{ \"font-size\": \"20px\" }}>View Friends</Link>\r\n                        </div>\r\n\r\n\r\n                    </nav>\r\n\r\n                </div>\r\n\r\n                <Switch>\r\n                    <Route path=\"/profile\">\r\n                        <div className='' style={{ 'margin-top': \"4rem\" }}>\r\n\r\n                            <ProfileContainer></ProfileContainer>\r\n\r\n                        </div>\r\n                    </Route>\r\n                    <Route path=\"/friends\">\r\n                        <div className='' style={{ 'margin-top': \"4rem\" }}>\r\n\r\n                            <FriendsContainer></FriendsContainer>\r\n\r\n                        </div>\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <div className='' style={{ 'margin-top': \"4rem\" }}>\r\n\r\n                            <PostsContainer></PostsContainer>\r\n\r\n                        </div>\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nMyRouter.propTypes = {\r\n    openNav: PropTypes.func.isRequired,\r\n    closeNav: PropTypes.func.isRequired,\r\n    handleLogout: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default MyRouter\r\n","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Profile\\ProfileContainer.js",[],"C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Profile\\Profile.js",["156"],"import React from 'react'\r\nimport { motion } from \"framer-motion\"\r\nimport EditprofileContainer from './Editprofile/EditprofileContainer'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction Profile({ profileStore, editProfile, profileRef, setEditProfile, profileVariant, editProfileVariant }) {\r\n    return (\r\n        <>\r\n\r\n            {profileStore.firstName &&\r\n                <div className='row profile-card' id=''>\r\n                    <div ref={profileRef} className={`col s10 offset-s1 ${editProfile ? 'l4 offset-l1 animate-profile' : 'l6 offset-l3 animate-profile-back'} transparent`}>\r\n\r\n                        <motion.div class=\"card\" variants={profileVariant}\r\n                            animate=\"visible\"\r\n                            initial=\"hidden\" >\r\n                            <div class=\"card-image\">\r\n                                <img src={profileStore.profilePicture} alt=\"\" className='materialboxed' />\r\n                                <a class=\"btn-floating halfway-fab indigo\"\r\n                                    onClick={(e, profileRef) => {\r\n                                        setEditProfile(!editProfile)\r\n                                    }\r\n\r\n                                    }\r\n                                ><i class=\"material-icons\">edit</i></a>\r\n                            </div>\r\n                            <div class=\"card-content\">\r\n                                <h3>{profileStore.firstName.toUpperCase()} {profileStore.lastName.toUpperCase()}</h3>\r\n                                <br></br>\r\n                                <h4> {profileStore.gender.toUpperCase()} </h4>\r\n                                <br></br>\r\n                                <p>{profileStore.mobileNumber}</p>\r\n                                <p>{new Date(profileStore.dateOfBirth).toDateString()}</p>\r\n                            </div>\r\n                        </motion.div>\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                    {editProfile && (<motion.div className='col s10 offset-s1 l5 offset-l1 white hide-on-med-and-down' variants={editProfileVariant}\r\n                        animate=\"visible\"\r\n                        initial=\"hidden\">\r\n                        <EditprofileContainer ></EditprofileContainer>\r\n                    </motion.div>)}\r\n\r\n                </div>}\r\n\r\n            {editProfile && (<div className='row hide-on-large-only'>\r\n                <div className='col white s10 offset-s1'>\r\n                    <EditprofileContainer></EditprofileContainer>\r\n                </div>\r\n            </div>)}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nProfile.propTypes = {\r\n    profileStore: PropTypes.shape({\r\n        firstName: PropTypes.string,\r\n        lastName: PropTypes.string,\r\n        mobileNumber: PropTypes.string,\r\n        profilePicture: PropTypes.string,\r\n        gender: PropTypes.string,\r\n        dateOfBirth: PropTypes.string,\r\n        friends: PropTypes.arrayOf(\r\n            PropTypes.shape({\r\n                _id: PropTypes.string,\r\n                uid: PropTypes.string,\r\n                user: PropTypes.string,\r\n                userProfilePicture: PropTypes.string,\r\n                userFriends: PropTypes.arrayOf(PropTypes.string),\r\n                gender: PropTypes.string,\r\n                mobileNumber: PropTypes.string\r\n            })\r\n        ),\r\n        friendRequests: PropTypes.arrayOf(\r\n            PropTypes.shape({\r\n                _id: PropTypes.string,\r\n                uid: PropTypes.string,\r\n                user: PropTypes.string,\r\n                userProfilePicture: PropTypes.string,\r\n                userFriends: PropTypes.arrayOf(PropTypes.string),\r\n                gender: PropTypes.string,\r\n                mobileNumber: PropTypes.string\r\n            })\r\n        ),\r\n    }).isRequired,\r\n    profileRef: PropTypes.oneOfType([\r\n        PropTypes.func,\r\n        PropTypes.shape({ current: PropTypes.instanceOf(Element) })\r\n    ]),\r\n    editProfile: PropTypes.bool,\r\n    setEditProfile: PropTypes.func\r\n}\r\n\r\nexport default Profile\r\n","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Profile\\Editprofile\\EditprofileContainer.js",["157","158"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport materialize from 'materialize-css';\r\nimport { editProfile } from '../../../../actions/profile'\r\nimport '../../../../Assets/styles/styles.css'\r\nimport EditProfile from './EditProfile';\r\n\r\n\r\nfunction EditprofileContainer() {\r\n\r\n    const profileStore = useSelector(state => state.profile)\r\n    const dispatch = useDispatch()\r\n    const [details, setDetails] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        mobileNumber: '',\r\n        profilePicture: '',\r\n        gender: '',\r\n        dateOfBirth: '',\r\n        uid: '',\r\n        _id: ''\r\n\r\n    })\r\n\r\n    const otherRef = useRef(null)\r\n    const maleRef = useRef(null)\r\n    const femaleRef = useRef(null)\r\n    const loaderRef = useRef(null)\r\n\r\n    const [isSending, setIsSending] = useState(false)\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dob = useRef(profileStore.dateOfBirth)\r\n    useEffect(() => {\r\n\r\n        var element = document.querySelectorAll('.datepicker');\r\n        materialize.Datepicker.init(element, {\r\n            container: \"html\",\r\n            onSelect: function (date) {\r\n                setDetails({ ...details, dateOfBirth: dob.current.value })\r\n            },\r\n            minDate: new Date(1950, 1, 1),\r\n            maxDate: new Date(2015, 1, 1),\r\n            yearRange: [1970, 2015],\r\n            autoClose: true,\r\n            defaultDate: new Date(profileStore.dateOfBirth)\r\n        });\r\n\r\n\r\n        return () => {\r\n\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        setDetails({\r\n            firstName: profileStore.firstName,\r\n            lastName: profileStore.lastName,\r\n            mobileNumber: profileStore.mobileNumber,\r\n            profilePicture: profileStore.profilePicture,\r\n            gender: profileStore.gender,\r\n            uid: profileStore.uid,\r\n            _id: profileStore._id,\r\n            dateOfBirth: new Date(profileStore.dateOfBirth).toDateString()\r\n        })\r\n\r\n        if (profileStore.gender === \"male\") {\r\n            maleRef.current.checked = true\r\n        }\r\n        else if (profileStore.gender === \"female\") {\r\n            femaleRef.current.checked = true\r\n        }\r\n        else {\r\n            otherRef.current.checked = true\r\n        }\r\n\r\n\r\n        return () => {\r\n\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (isSending) {\r\n            loaderRef.current.scrollIntoView({\r\n                behavior: \"smooth\",\r\n                block: \"start\",\r\n                inline: \"start\"\r\n\r\n            });\r\n        }\r\n        return () => {\r\n\r\n        }\r\n    }, [isSending])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        setIsSending(true)\r\n\r\n        if (dob.current.value)\r\n            details.dateOfBirth = dob.current.value\r\n        console.log(\"YOWTF\")\r\n\r\n        setTimeout(async () => {\r\n\r\n            const result = await dispatch(editProfile(details))\r\n            setIsSending(false)\r\n\r\n            if (result.EDIT_PROFILE_ERROR) {\r\n                setMessage('There was an error Editing Profile')\r\n\r\n                setTimeout(() => {\r\n\r\n                    setMessage('')\r\n\r\n                }, 3000);\r\n            }\r\n\r\n            else {\r\n                setMessage('Profile Successfully Edited')\r\n\r\n                setTimeout(() => {\r\n\r\n                    setMessage('')\r\n\r\n                }, 3000);\r\n            }\r\n\r\n        }, 1500);\r\n\r\n    }\r\n\r\n    return (\r\n        <EditProfile\r\n            details={details}\r\n            setDetails={setDetails}\r\n            handleSubmit={handleSubmit}\r\n            maleRef={maleRef}\r\n            femaleRef={femaleRef}\r\n            dob={dob}\r\n            otherRef={otherRef}\r\n            isSending={isSending}\r\n            loaderRef={loaderRef}\r\n            message={message}>\r\n\r\n        </EditProfile>\r\n    )\r\n}\r\n\r\nexport default EditprofileContainer\r\n","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Profile\\Editprofile\\Editprofile.js",["159","160"],"C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Profile\\Editprofile\\EditProfile.js",[],"C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Friends\\FriendsContainer.js",[],"C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Friends\\Friends.js",["161","162","163","164","165","166"],"import React from 'react'\r\nimport { AnimateSharedLayout } from \"framer-motion\"\r\nimport FriendsChild from './FriendsChild';\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction Friends({ option, setOption }) {\r\n    return (\r\n        <div>\r\n            <div class='row'>\r\n\r\n\r\n                <div className='col l4 offset-l1 s10 offset-s1 white'>\r\n\r\n\r\n\r\n                    <div class=\"collection\" style={{ \"padding\": \"40px\" }}>\r\n\r\n\r\n                        <a class={`collection-item ${option === 'list' && 'active'}`} style={{ \"padding\": \"20px\" }} onClick={() => setOption('list')}>\r\n                            Friends List\r\n            <span class=\"secondary-content\"><i class=\"material-icons\">\r\n                                {option == 'list' ? 'send' : 'double_arrow'}</i></span>\r\n                        </a>\r\n\r\n                        <a class={`collection-item ${option === 'requests' && 'active'}`} style={{ \"padding\": \"20px\" }} onClick={() => setOption('requests')}>\r\n                            Friend Requests\r\n            <span class=\"secondary-content\"><i class=\"material-icons\">\r\n                                {option == 'requests' ? 'send' : 'double_arrow'}</i></span>\r\n                        </a>\r\n\r\n                        <a class={`collection-item ${option === 'newFriends' && 'active'}`} style={{ \"padding\": \"20px\" }} onClick={() => setOption('newFriends')}>\r\n                            Find New Friends\r\n            <span class=\"secondary-content\"><i class=\"material-icons\">\r\n                                {option == 'newFriends' ? 'send' : 'double_arrow'}</i></span>\r\n                        </a>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n                <div className='col l5 offset-l1 hide-on-med-and-down'>\r\n                    <AnimateSharedLayout type=\"crossfade\">\r\n\r\n                        {option === 'list' && <FriendsChild option='list'>\r\n\r\n                        </FriendsChild>}\r\n\r\n\r\n                        {option === 'requests' && <FriendsChild option='requests'>\r\n\r\n                        </FriendsChild>}\r\n\r\n                        {option === 'newFriends' && <FriendsChild option='newFriends'>\r\n\r\n                        </FriendsChild>}\r\n\r\n                    </AnimateSharedLayout>\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n\r\n            <div className='row hide-on-large-only' style={{ \"margin-top\": \"50px\" }}>\r\n\r\n                <div className='col s12 m8 offset-m2'>\r\n\r\n                    <FriendsChild option={option}>\r\n\r\n                    </FriendsChild>\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nFriends.propTypes = {\r\n    setOption: PropTypes.func,\r\n    option: PropTypes.string,\r\n}\r\n\r\nexport default Friends\r\n","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Posts\\PostsContainer.js",["167","168","169"],"import React, { useEffect, useState, useRef } from 'react'\r\nimport materialize from 'materialize-css';\r\nimport '../../../Assets/styles/styles.css'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addPost, editPost } from '../../../actions/post'\r\nimport { getPosts } from '../../../actions/post'\r\nimport Posts from './Posts';\r\n\r\nconst imageVariant = {\r\n    hover: {\r\n        scale: 1.2,\r\n        textShadow: \"0px 0px 8px rgb(255,255,255)\",\r\n        boxShadow: \"0px 0px 8px rgb(255,255,255)\",\r\n        transition: {\r\n            yoyo: Infinity,\r\n            duration: 0.3\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst butVaraints = {\r\n    hover: {\r\n        scale: 1.2,\r\n        textShadow: \"0px 0px 8px rgb(255,255,255)\",\r\n        boxShadow: \"0px 0px 8px rgb(255,255,255)\",\r\n        transition: {\r\n            yoyo: Infinity,\r\n            duration: 0.3\r\n        }\r\n    }\r\n}\r\n\r\nconst formVariants = {\r\n    hidden:\r\n    {\r\n        x: \"-15vw\",\r\n        opacity: 0\r\n    },\r\n    visible: {\r\n        x: 0,\r\n        opacity: 1,\r\n        transition: {\r\n            type: \"spring\",\r\n            delay: 0.5\r\n        }\r\n    },\r\n}\r\n\r\nconst postsVariants = {\r\n    hidden:\r\n    {\r\n        x: \"-25vw\",\r\n        opacity: 0\r\n    },\r\n    visible: {\r\n        x: 0,\r\n        opacity: 1,\r\n        transition: {\r\n            type: \"spring\",\r\n            delay: 0.2\r\n        }\r\n    },\r\n}\r\n\r\nfunction PostsContainer() {\r\n\r\n\r\n    const postStore = useSelector(state => state.post)\r\n\r\n    const postEdit = useSelector(state => state.editpost)\r\n\r\n    const [isSending, setIsSending] = useState(false)\r\n\r\n    const [fileError, setFileError] = useState('')\r\n\r\n    const [message, setMessage] = useState('')\r\n\r\n    const [details, setDetails] = useState(\r\n        {\r\n            uid: '',\r\n            title: '',\r\n            description: '',\r\n            date: '',\r\n            tags: '',\r\n            images: []\r\n        })\r\n\r\n    const [isActive, setIsActive] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const loaderRef = useRef(null)\r\n\r\n    useEffect(() => {\r\n\r\n        var elems = document.querySelectorAll('.collapsible');\r\n        materialize.Collapsible.init(elems);\r\n        var elems1 = document.querySelectorAll('.chips');\r\n        materialize.Chips.init(elems1, {\r\n            placeholder: 'Enter tags for Your post',\r\n            secondaryPlaceholder: '+Tag',\r\n            onChipAdd: function (event, chip) {\r\n\r\n                console.log(chip.data, event)\r\n\r\n            }\r\n        });\r\n\r\n\r\n        return () => {\r\n\r\n            dispatch({ type: \"REMOVE_EDIT_POST_ID\" })\r\n\r\n        }\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        async function get() {\r\n            await dispatch(getPosts())\r\n        }\r\n\r\n        get()\r\n\r\n\r\n        if (postEdit) {\r\n            const currentPost = postStore.find((p) => p._id === postEdit)\r\n            setFileError('')\r\n            setDetails({\r\n                ...details,\r\n                _id: currentPost._id,\r\n                uid: currentPost.uid,\r\n                title: currentPost.title,\r\n                description: currentPost.description,\r\n                date: currentPost.date,\r\n                tags: currentPost.tags,\r\n                images: currentPost.images\r\n            })\r\n            setIsActive(true)\r\n        }\r\n        return () => {\r\n\r\n        }\r\n    }, [dispatch, postEdit])\r\n\r\n    const clear = () => {\r\n        setDetails({\r\n            uid: '',\r\n            title: '',\r\n            description: '',\r\n            date: '',\r\n            tags: '',\r\n            images: []\r\n        })\r\n        setIsActive(false)\r\n        dispatch({ type: \"REMOVE_EDIT_POST_ID\" })\r\n        setFileError('')\r\n        fileInput.current.value = \"\"\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isSending) {\r\n            loaderRef.current.scrollIntoView({\r\n                behavior: \"smooth\",\r\n                block: \"start\",\r\n                inline: \"start\"\r\n\r\n            });\r\n        }\r\n        return () => {\r\n\r\n        }\r\n    }, [isSending])\r\n\r\n    const handleSubmit = async (e) => {\r\n\r\n        e.preventDefault()\r\n\r\n        if (details.images.length === 0) {\r\n            setFileError('Please Select Atleast One File')\r\n            return\r\n        }\r\n\r\n        setFileError('')\r\n\r\n\r\n        setIsSending(true)\r\n\r\n        if (postEdit) {\r\n\r\n            setTimeout(async () => {\r\n\r\n\r\n                const result = await dispatch(editPost(details))\r\n                clear()\r\n                setIsSending(false)\r\n                formRef.current.scrollIntoView({\r\n                    behavior: \"smooth\",\r\n                    block: \"nearest\",\r\n                    inline: \"start\"\r\n\r\n                });\r\n                if (result.POST_ERROR) {\r\n                    setMessage('There was an error Editing Post')\r\n\r\n                    setTimeout(() => {\r\n\r\n                        setMessage('')\r\n\r\n                    }, 3000);\r\n                }\r\n\r\n                else {\r\n                    setMessage('Post Successfully Edited')\r\n\r\n                    setTimeout(() => {\r\n\r\n                        setMessage('')\r\n\r\n                    }, 3000);\r\n                }\r\n\r\n            }, 1000);\r\n        }\r\n\r\n        else {\r\n\r\n            setTimeout(async () => {\r\n\r\n                details.date = new Date()\r\n                const result = await dispatch(addPost(details))\r\n                clear()\r\n                setIsSending(false)\r\n                formRef.current.scrollIntoView({\r\n                    behavior: \"smooth\",\r\n                    block: \"center\",\r\n                    inline: \"center\"\r\n\r\n                });\r\n                if (result.POST_ERROR) {\r\n                    setMessage('There was an error Adding Post')\r\n                    setTimeout(() => {\r\n\r\n                        setMessage('')\r\n\r\n                    }, 3000);\r\n                }\r\n\r\n                else {\r\n                    setMessage('Post Successfully Added')\r\n\r\n                    setTimeout(() => {\r\n\r\n                        setMessage('')\r\n\r\n                    }, 3000);\r\n                }\r\n\r\n            }, 1000);\r\n        }\r\n\r\n    }\r\n\r\n    const handleFileSubmit = async (e) => {\r\n\r\n        var images = e.target.files\r\n\r\n        const newImages = []\r\n\r\n        for (const image of images) {\r\n            let reader = new FileReader();\r\n            reader.readAsDataURL(image);\r\n            reader.onload = function () {\r\n                newImages.push(reader.result)\r\n                if (newImages.length === e.target.files.length) {\r\n                    setDetails({ ...details, images: [...details.images, ...newImages] })\r\n                }\r\n\r\n            };\r\n            reader.onerror = function (error) {\r\n                console.log('Error: ', error);\r\n            };\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const formRef = useRef(null)\r\n    const fileInput = useRef(null)\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <Posts\r\n                details={details}\r\n                clear={clear}\r\n                isSending={isSending}\r\n                loaderRef={loaderRef}\r\n                message={message}\r\n                postStore={postStore}\r\n                setDetails={setDetails}\r\n                handleSubmit={handleSubmit}\r\n                postsVariants={postsVariants}\r\n                formRef={formRef}\r\n                handleFileSubmit={handleFileSubmit}\r\n                fileError={fileError}\r\n                fileInput={fileInput}\r\n                isActive={isActive}\r\n                postEdit={postEdit}\r\n                imageVariant={imageVariant}\r\n                formVariants={formVariants}\r\n            >\r\n\r\n            </Posts>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default PostsContainer\r\n","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Posts\\Posts.js",["170"],"import React from 'react'\r\nimport PostContainer from './Post/PostContainer'\r\nimport { motion } from \"framer-motion\"\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction Posts({ details, clear, isSending, loaderRef, message, postStore, postsVariants, formRef,\r\n    setDetails, handleFileSubmit, handleSubmit, fileError, fileInput, isActive, postEdit, imageVariant, formVariants }) {\r\n    return (\r\n        <>\r\n\r\n\r\n            <div className=\"row\"\r\n            >\r\n\r\n                <motion.form ref={formRef} className=\"col s10 offset-s1 l4 offset-l1 m6 offset-m3 center white\"\r\n                    onSubmit={(e) => handleSubmit(e)} style={{ \"padding\": \"30px\" }}\r\n                    variants={formVariants}\r\n                    animate=\"visible\"\r\n                    initial=\"hidden\"\r\n                >\r\n\r\n                    <h6><u>{postEdit ? \"Edit Post\" : \"Add Post\"}</u></h6>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"input-field col s12\">\r\n                            <i class=\"material-icons prefix\">title</i>\r\n                            <input id=\"title\" type=\"text\" className='validate' value={details.title} required={true}\r\n                                onChange={(e) => setDetails({ ...details, title: e.target.value })} />\r\n                            <label for=\"title\" className={`${isActive ? \"active\" : \"\"}`}>Title</label>\r\n                            <span className=\"helper-text\" data-error=\"Please Give Your Post Title\" data-success=\"\"></span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"input-field col s12\">\r\n                            <i class=\"material-icons prefix\">description</i>\r\n                            <textarea id=\"textarea1\" className=\"materialize-textarea\" value={details.description} required={true}\r\n                                onChange={(e) => setDetails({ ...details, description: e.target.value })}></textarea>\r\n                            <label for=\"textarea1\" className={`${isActive ? \"active\" : \"\"}`}>Describe Your Post</label>\r\n                            <span className=\"helper-text\" data-error=\"Please Describe your Post\" data-success=\"\"></span>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    {/* <div class=\"chips chips-placeholder\">\r\n                    </div> */}\r\n\r\n                    <div class=\"row\">\r\n                        <div className=\"input-field col s12\">\r\n                            <i class=\"material-icons prefix\">local_offer</i>\r\n                            <input id=\"tags\" type=\"text\" className=\"validate\" value={details.tags}\r\n                                onChange={(e) => setDetails({ ...details, tags: e.target.value.split(',') })} />\r\n                            <label for=\"tags\" className={`${isActive ? \"active\" : \"\"} validate`}>Tags seperated by Comma</label>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                    <div className=\"row\">\r\n                        <div className='col s12'>\r\n                            <div className=\"image-upload \">\r\n                                <label for=\"file-input\">\r\n                                    <motion.span className=\"material-icons pointer indigo-text text-darken-1\" style={{ 'font-size': \"5rem\" }}\r\n                                        variants={imageVariant}\r\n                                        whileHover=\"hover\">\r\n                                        add_photo_alternate\r\n                                    </motion.span>\r\n                                </label>\r\n                                <input id='file-input' type=\"file\" className=\"\" multiple={true} required={false} ref={fileInput}\r\n                                    onChange={(e) => handleFileSubmit(e)}\r\n                                >\r\n                                </input>\r\n                            </div>\r\n                            <span style={{ 'color': \"orangered\" }}>{fileError}</span>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='row'>\r\n\r\n                        {details.images.map((image, id) => {\r\n                            return (\r\n                                <a class=\"\" href='#none'\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        var array = [...details.images];\r\n                                        var index = array.indexOf(image)\r\n                                        if (index !== -1) {\r\n                                            array.splice(index, 1);\r\n                                            setDetails({ ...details, images: array })\r\n                                        }\r\n\r\n                                    }}\r\n                                ><img style={{ \"margin\": \"5px\" }} width={100} height={100} src={image} class=\"img-responsive hover-image\" />\r\n\r\n                                </a>\r\n                            )\r\n                        }\r\n                        )\r\n                        }\r\n\r\n                    </div>\r\n\r\n                    <div className='row'>\r\n\r\n                        <div className='col l6 s6 '>\r\n                            <button className='btn indigo right hoverable' style={{ 'margin-top': \"15px\" }}>Submit Post</button>\r\n                        </div>\r\n                        <div className='col l6 s6 '>\r\n                            <button onClick={(e) => clear()} style={{ 'margin-top': \"15px\" }} class=\"btn left red hoverable\"><i class=\"material-icons left\">close</i>Clear</button>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                    {isSending ? (\r\n                        <div class='row' ref={loaderRef}>\r\n                            <div class=\"bouncing center col s4 offset-s4\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    )\r\n                        : ''}\r\n\r\n                    {message && (\r\n                        <div className='container grey lighten-4 z-depth-2' style={{ \"padding\": '5px 10px' }}>\r\n                            <p style={{ \"font-size\": \"17px\" }}><b>{message}</b></p>\r\n                        </div>\r\n                    )\r\n\r\n                    }\r\n\r\n\r\n\r\n\r\n                </motion.form>\r\n\r\n\r\n                {postStore.length === 0 ? (\r\n\r\n                    <div className='col l6 center  m6 offset-m3 '>\r\n                        <div class=\"preloader-wrapper big active\">\r\n                            <div class=\"spinner-layer spinner-blue-only\">\r\n                                <div class=\"circle-clipper left\">\r\n                                    <div class=\"circle\"></div>\r\n                                </div><div class=\"gap-patch\">\r\n                                    <div class=\"circle\"></div>\r\n                                </div><div class=\"circle-clipper right\">\r\n                                    <div class=\"circle\"></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                ) :\r\n                    <motion.div className=\"col l5 offset-l1 transparent hide-on-med-and-down\" style={{ \"padding\": '0px' }}\r\n                        variants={postsVariants}\r\n                        animate=\"visible\"\r\n                        initial=\"hidden\">\r\n                        {postStore.map(post =>\r\n                            <PostContainer post={post} formRef={formRef}></PostContainer>\r\n                        )}\r\n                    </motion.div>}\r\n\r\n\r\n\r\n            </div>\r\n\r\n            <div className='row hide-on-large-only'>\r\n                <div className=\"col l5 offset-l1 transparent m8 offset-m2 s10 offset-s1 \" style={{ \"padding\": '0px' }}>\r\n                    {postStore.map(post =>\r\n                        <PostContainer post={post} formRef={formRef}></PostContainer>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nPosts.propTypes = {\r\n    details: PropTypes.shape({\r\n        uid: PropTypes.string,\r\n        title: PropTypes.string,\r\n        description: PropTypes.string,\r\n        date: PropTypes.string,\r\n        tags: PropTypes.string,\r\n        image: PropTypes.arrayOf(PropTypes.string),\r\n    }).isRequired,\r\n    postStore: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            _id: PropTypes.string,\r\n            uid: PropTypes.string,\r\n            title: PropTypes.string,\r\n            description: PropTypes.string,\r\n            date: PropTypes.string,\r\n            tags: PropTypes.string,\r\n            image: PropTypes.arrayOf(PropTypes.string),\r\n            user: PropTypes.string,\r\n            userProfilePicture: PropTypes.string,\r\n            comments: PropTypes.arrayOf(\r\n                PropTypes.shape(\r\n                    {\r\n                        comment: PropTypes.string,\r\n                        user: PropTypes.string,\r\n                        userProfilePicture: PropTypes.string,\r\n                        date: PropTypes.string\r\n                    }\r\n                )\r\n            )\r\n        }).isRequired\r\n    ),\r\n    clear: PropTypes.func,\r\n    isSending: PropTypes.bool,\r\n    message: PropTypes.string,\r\n    handleSubmit: PropTypes.func,\r\n    handleFileSubmit: PropTypes.func,\r\n    setDetails: PropTypes.func,\r\n    loaderRef: PropTypes.oneOfType([\r\n        PropTypes.func,\r\n        PropTypes.shape({ current: PropTypes.instanceOf(Element) })\r\n    ]),\r\n    formRef: PropTypes.oneOfType([\r\n        PropTypes.func,\r\n        PropTypes.shape({ current: PropTypes.instanceOf(Element) })\r\n    ]),\r\n    fileInput: PropTypes.oneOfType([\r\n        PropTypes.func,\r\n        PropTypes.shape({ current: PropTypes.instanceOf(Element) })\r\n    ]),\r\n    fileError: PropTypes.string,\r\n    isActive: PropTypes.bool,\r\n    postEdit: PropTypes.string,\r\n\r\n}\r\n\r\nexport default Posts\r\n","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Posts\\Post\\PostContainer.js",["171","172"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport { addLike, deletePost, removeLike } from '../../../../actions/post'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport materialize from 'materialize-css';\r\nimport '../../../../Assets/styles/styles.css'\r\nimport PropTypes from 'prop-types';\r\nimport Post from './Post'\r\n\r\nconst commentsVariants = {\r\n    hidden:\r\n    {\r\n        y: \"-10vw\",\r\n        opacity: 0\r\n    },\r\n    visible: {\r\n        y: 0,\r\n        opacity: 1,\r\n        transition: {\r\n            type: \"spring\",\r\n            delay: 0.2\r\n        }\r\n    },\r\n    exit:\r\n    {\r\n        opacity: 0,\r\n        transition:\r\n        {\r\n            type: 'spring',\r\n            duration: 1\r\n        }\r\n    }\r\n}\r\n\r\nfunction PostContainer({ post, formRef }) {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const [comments, setComments] = useState(false)\r\n    const store = useSelector(state => state.auth)\r\n\r\n    const commentsRef = useRef(null)\r\n    const postRef = useRef(null)\r\n\r\n    const [counter, setCounter] = useState(0)\r\n\r\n    const [liked, setliked] = useState(null)\r\n\r\n    const handleLike = async () => {\r\n        const details = {\r\n            _id: post._id,\r\n        }\r\n        await dispatch(addLike(details))\r\n    }\r\n    const handleDislike = async () => {\r\n        const details = {\r\n            _id: post._id,\r\n        }\r\n        await dispatch(removeLike(details))\r\n    }\r\n\r\n\r\n    const handleEdit = () => {\r\n        dispatch({ type: \"ADD_EDIT_POST_ID\", payload: post._id })\r\n        formRef.current.scrollIntoView({\r\n            behavior: \"smooth\",\r\n        });\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        dispatch(deletePost(post._id))\r\n        dispatch({ type: \"REMOVE_EDIT_POST_ID\" })\r\n    }\r\n\r\n    useEffect(() => {\r\n        var elems = document.querySelectorAll('.carousel');\r\n        materialize.Carousel.init(elems, {\r\n            fullWidth: true,\r\n            numVisible: 5\r\n        })\r\n\r\n        return () => {\r\n\r\n        }\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (post.likedUsers.includes(store.uid)) {\r\n            setliked(true)\r\n        }\r\n\r\n        else {\r\n            setliked(false)\r\n        }\r\n\r\n\r\n\r\n        return () => {\r\n\r\n        }\r\n    }, [post.likedUsers])\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        var timeout = null\r\n\r\n        if (counter === 0) {\r\n            return\r\n        }\r\n\r\n        if (comments) {\r\n            commentsRef.current.scrollIntoView({\r\n                behavior: \"smooth\",\r\n                block: \"start\",\r\n                inline: \"start\"\r\n\r\n            });\r\n        }\r\n\r\n        else {\r\n\r\n            timeout = setTimeout(() => {\r\n                postRef.current.scrollIntoView({\r\n                    behavior: \"smooth\",\r\n                    block: \"start\",\r\n                    inline: \"start\"\r\n\r\n                });\r\n\r\n            }, 600);\r\n        }\r\n\r\n        return () => {\r\n            clearTimeout(timeout);\r\n        }\r\n\r\n    }, [comments]);\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Post\r\n                post={post}\r\n                postRef={postRef}\r\n                store={store}\r\n                handleLike={handleLike}\r\n                handleEdit={handleEdit}\r\n                handleDelete={handleDelete}\r\n                handleDislike={handleDislike}\r\n                liked={liked}\r\n                counter={counter}\r\n                setComments={setComments}\r\n                setCounter={setCounter}\r\n                comments={comments}\r\n                commentsRef={commentsRef}\r\n                commentsVariants={commentsVariants}>\r\n\r\n            </Post>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nPostContainer.propTypes = {\r\n    formRef: PropTypes.oneOfType([\r\n        PropTypes.func,\r\n        PropTypes.shape({ current: PropTypes.instanceOf(Element) })\r\n    ]),\r\n    post: PropTypes.shape({\r\n        _id: PropTypes.string,\r\n        comments: PropTypes.arrayOf(\r\n            PropTypes.shape(\r\n                {\r\n                    comment: PropTypes.string,\r\n                    user: PropTypes.string,\r\n                    userProfilePicture: PropTypes.string,\r\n                    date: PropTypes.string\r\n                }\r\n            )\r\n        ),\r\n        date: PropTypes.string,\r\n        description: PropTypes.string,\r\n        images: PropTypes.array,\r\n        likeCount: PropTypes.number,\r\n        likedUsers: PropTypes.array,\r\n        tags: PropTypes.array,\r\n        title: PropTypes.string,\r\n        uid: PropTypes.string,\r\n        user: PropTypes.string,\r\n        userProfilePicture: PropTypes.string\r\n    }),\r\n\r\n}\r\n\r\n\r\nexport default PostContainer\r\n","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Posts\\Post\\Post.js",["173","174","175","176","177","178"],"C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Posts\\Post\\comments\\CommentsContainer.js",[],"C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Posts\\Post\\comments\\Comments.js",[],{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":84,"column":53,"nodeType":"185","endLine":84,"endColumn":111},{"ruleId":"183","severity":1,"message":"186","line":33,"column":25,"nodeType":"185","endLine":34,"endColumn":62},{"ruleId":"183","severity":1,"message":"184","line":20,"column":29,"nodeType":"185","endLine":20,"endColumn":68},{"ruleId":"183","severity":1,"message":"184","line":21,"column":29,"nodeType":"185","endLine":21,"endColumn":117},{"ruleId":"183","severity":1,"message":"186","line":36,"column":37,"nodeType":"185","endLine":37,"endColumn":77},{"ruleId":"183","severity":1,"message":"184","line":45,"column":29,"nodeType":"185","endLine":45,"endColumn":85},{"ruleId":"183","severity":1,"message":"186","line":19,"column":33,"nodeType":"185","endLine":25,"endColumn":34},{"ruleId":"187","severity":1,"message":"188","line":53,"column":8,"nodeType":"189","endLine":53,"endColumn":10,"suggestions":"190"},{"ruleId":"187","severity":1,"message":"191","line":82,"column":8,"nodeType":"189","endLine":82,"endColumn":10,"suggestions":"192"},{"ruleId":"187","severity":1,"message":"188","line":53,"column":8,"nodeType":"189","endLine":53,"endColumn":10,"suggestions":"193"},{"ruleId":"187","severity":1,"message":"191","line":82,"column":8,"nodeType":"189","endLine":82,"endColumn":10,"suggestions":"194"},{"ruleId":"183","severity":1,"message":"186","line":19,"column":25,"nodeType":"185","endLine":19,"endColumn":151},{"ruleId":"195","severity":1,"message":"196","line":22,"column":41,"nodeType":"197","messageId":"198","endLine":22,"endColumn":43},{"ruleId":"183","severity":1,"message":"186","line":25,"column":25,"nodeType":"185","endLine":25,"endColumn":159},{"ruleId":"195","severity":1,"message":"196","line":28,"column":41,"nodeType":"197","messageId":"198","endLine":28,"endColumn":43},{"ruleId":"183","severity":1,"message":"186","line":31,"column":25,"nodeType":"185","endLine":31,"endColumn":163},{"ruleId":"195","severity":1,"message":"196","line":34,"column":41,"nodeType":"197","messageId":"198","endLine":34,"endColumn":43},{"ruleId":"199","severity":1,"message":"200","line":22,"column":7,"nodeType":"201","messageId":"202","endLine":22,"endColumn":18},{"ruleId":"187","severity":1,"message":"203","line":116,"column":8,"nodeType":"189","endLine":116,"endColumn":10,"suggestions":"204"},{"ruleId":"187","severity":1,"message":"205","line":146,"column":8,"nodeType":"189","endLine":146,"endColumn":28,"suggestions":"206"},{"ruleId":"207","severity":1,"message":"208","line":95,"column":34,"nodeType":"185","endLine":95,"endColumn":141},{"ruleId":"187","severity":1,"message":"209","line":102,"column":8,"nodeType":"189","endLine":102,"endColumn":25,"suggestions":"210"},{"ruleId":"187","severity":1,"message":"211","line":139,"column":8,"nodeType":"189","endLine":139,"endColumn":18,"suggestions":"212"},{"ruleId":"207","severity":1,"message":"208","line":32,"column":86,"nodeType":"185","endLine":32,"endColumn":114},{"ruleId":"183","severity":1,"message":"186","line":43,"column":59,"nodeType":"185","endLine":44,"endColumn":66},{"ruleId":"183","severity":1,"message":"186","line":45,"column":33,"nodeType":"185","endLine":46,"endColumn":72},{"ruleId":"183","severity":1,"message":"186","line":74,"column":37,"nodeType":"185","endLine":75,"endColumn":74},{"ruleId":"183","severity":1,"message":"186","line":77,"column":38,"nodeType":"185","endLine":78,"endColumn":77},{"ruleId":"183","severity":1,"message":"186","line":81,"column":38,"nodeType":"185","endLine":87,"endColumn":40},"no-native-reassign",["213"],"no-negated-in-lhs",["214"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'details' and 'profileStore.dateOfBirth'. Either include them or remove the dependency array. You can also do a functional update 'setDetails(d => ...)' if you only need 'details' in the 'setDetails' call.","ArrayExpression",["215"],"React Hook useEffect has missing dependencies: 'profileStore._id', 'profileStore.dateOfBirth', 'profileStore.firstName', 'profileStore.gender', 'profileStore.lastName', 'profileStore.mobileNumber', 'profileStore.profilePicture', and 'profileStore.uid'. Either include them or remove the dependency array.",["216"],["217"],["218"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'butVaraints' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["219"],"React Hook useEffect has missing dependencies: 'details' and 'postStore'. Either include them or remove the dependency array. You can also do a functional update 'setDetails(d => ...)' if you only need 'details' in the 'setDetails' call.",["220"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'store.uid'. Either include it or remove the dependency array.",["221"],"React Hook useEffect has a missing dependency: 'counter'. Either include it or remove the dependency array.",["222"],"no-global-assign","no-unsafe-negation",{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"223","fix":"227"},{"desc":"225","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},"Update the dependencies array to be: [details, profileStore.dateOfBirth]",{"range":"237","text":"238"},"Update the dependencies array to be: [profileStore._id, profileStore.dateOfBirth, profileStore.firstName, profileStore.gender, profileStore.lastName, profileStore.mobileNumber, profileStore.profilePicture, profileStore.uid]",{"range":"239","text":"240"},{"range":"241","text":"238"},{"range":"242","text":"240"},"Update the dependencies array to be: [dispatch]",{"range":"243","text":"244"},"Update the dependencies array to be: [details, dispatch, postEdit, postStore]",{"range":"245","text":"246"},"Update the dependencies array to be: [post.likedUsers, store.uid]",{"range":"247","text":"248"},"Update the dependencies array to be: [comments, counter]",{"range":"249","text":"250"},[1569,1571],"[details, profileStore.dateOfBirth]",[2366,2368],"[profileStore._id, profileStore.dateOfBirth, profileStore.firstName, profileStore.gender, profileStore.lastName, profileStore.mobileNumber, profileStore.profilePicture, profileStore.uid]",[1569,1571],[2366,2368],[2595,2597],"[dispatch]",[3322,3342],"[details, dispatch, postEdit, postStore]",[2222,2239],"[post.likedUsers, store.uid]",[2939,2949],"[comments, counter]"]