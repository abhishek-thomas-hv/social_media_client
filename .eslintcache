[{"C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\index.js":"1","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\App.js":"2","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Authentication\\Signup.js":"3","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Home.js":"4","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Authentication\\Wrapper.js":"5","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Authentication\\Login.js":"6","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\reducers\\index.js":"7","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\reducers\\auth.js":"8","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\actions\\auth.js":"9","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\api\\index.js":"10","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\reducers\\post.js":"11","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\actions\\post.js":"12","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Posts\\Posts.js":"13","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Posts\\Post\\Post.js":"14","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Posts\\Post\\comments\\Comments.js":"15","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Profile\\Profile.js":"16","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\actions\\profile.js":"17","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\reducers\\profile.js":"18","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Profile\\Editprofile\\Editprofile.js":"19","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Friends\\Friends.js":"20","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\reducers\\users.js":"21","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\actions\\users.js":"22","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\reducers\\editpost.js":"23","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Friends\\FriendsChild.js":"24"},{"size":500,"mtime":1610138205583,"results":"25","hashOfConfig":"26"},{"size":1689,"mtime":1610692029001,"results":"27","hashOfConfig":"26"},{"size":10734,"mtime":1610640526647,"results":"28","hashOfConfig":"26"},{"size":4400,"mtime":1610793641666,"results":"29","hashOfConfig":"26"},{"size":1386,"mtime":1610118594801,"results":"30","hashOfConfig":"26"},{"size":3820,"mtime":1610651647292,"results":"31","hashOfConfig":"26"},{"size":325,"mtime":1610532638309,"results":"32","hashOfConfig":"26"},{"size":421,"mtime":1610439575585,"results":"33","hashOfConfig":"26"},{"size":914,"mtime":1610443056586,"results":"34","hashOfConfig":"26"},{"size":2204,"mtime":1610633747890,"results":"35","hashOfConfig":"26"},{"size":1722,"mtime":1610545217891,"results":"36","hashOfConfig":"26"},{"size":2397,"mtime":1610694496198,"results":"37","hashOfConfig":"26"},{"size":15118,"mtime":1610959573798,"results":"38","hashOfConfig":"26"},{"size":9186,"mtime":1610960177924,"results":"39","hashOfConfig":"26"},{"size":4434,"mtime":1610960309360,"results":"40","hashOfConfig":"26"},{"size":3403,"mtime":1610806735196,"results":"41","hashOfConfig":"26"},{"size":1717,"mtime":1610958388588,"results":"42","hashOfConfig":"26"},{"size":334,"mtime":1610958274795,"results":"43","hashOfConfig":"26"},{"size":10575,"mtime":1610806735676,"results":"44","hashOfConfig":"26"},{"size":2949,"mtime":1610648547384,"results":"45","hashOfConfig":"26"},{"size":267,"mtime":1610462709062,"results":"46","hashOfConfig":"26"},{"size":318,"mtime":1610529909692,"results":"47","hashOfConfig":"26"},{"size":335,"mtime":1610537047795,"results":"48","hashOfConfig":"26"},{"size":7832,"mtime":1610958764343,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"wryd8y",{"filePath":"53","messages":"54","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"52"},"C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\index.js",[],["112","113"],"C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\App.js",["114","115","116","117","118","119","120"],"import React,{useEffect,useState} from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport {useDispatch,useSelector} from 'react-redux'\nimport {getPosts} from './actions/post'\nimport {getUserId} from './actions/auth'\n\n\nimport Home from './components/Home/Home';\nimport Signup from './components/Authentication/Signup';\nimport Wrapper from './components/Authentication/Wrapper';\n\n\nfunction App() {\n\n  const dispatch=useDispatch()\n  const store = useSelector(state => state.auth)\n\n  const [isLoading, setisLoading] = useState(true)\n\n  useEffect(() => {\n\n\n    setisLoading(true)\n    async function get()\n    {\n      \n      if(!store.isAuthenticated)\n      {\n        const result = await getUserId()\n        if(result.Token_Error)\n        {\n          setTimeout(() => {\n            setisLoading(false)\n          }, 1000);\n        }\n\n        else\n        {\n          setTimeout(() => {\n            dispatch({type:\"AUTHENTICATED\",payload:result.data.user_id.id})\n            setisLoading(false)\n          }, 1000)\n          \n        }\n       \n      }\n     else\n     {\n      setisLoading(false)\n     }\n\n    }\n\n    get()\n    return () => {\n      \n    }\n  },[store])\n\n  \n  if(isLoading)\n  {\n    return (\n      <div className=\"App\">\n        \n        <div className='row' style={{\"margin-top\":\"50vh\",\"margin-right\":\"100px\",\"margin-left\":\"100px\"}}>\n\n        <div class=\"progress\">\n            <div class=\"indeterminate\"></div>\n        </div>\n\n        </div>\n  \n      </div>\n    );\n  }\n\n  else\n  {\n    return (\n      <div className=\"App\">\n  \n          {store.isAuthenticated?<Home/>:<Wrapper/>}\n      \n      </div>\n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Authentication\\Signup.js",["121","122"],"import React,{useState,useEffect,useRef} from 'react'\r\nimport materialze from 'materialize-css'\r\nimport {SignUpFormSubmit} from '../../actions/auth'\r\nimport FileBase from 'react-file-base64'\r\nimport { useStore } from 'react-redux'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport './styles.css'\r\n\r\nfunction Signup() {\r\n\r\n    const dispatch=useDispatch()\r\n    useEffect(() => {\r\n        var element = document.querySelectorAll('.datepicker');\r\n        materialze.Datepicker.init(element, {\r\n            container: \"html\",\r\n            onClose: function(date) {\r\n                // setDetails({...details,dateOfBirth:dob.current.value})\r\n            },\r\n            minDate: new Date(1950,1,1),\r\n            maxDate: new Date(2015,1,1),\r\n            yearRange:[1970,2015],\r\n            autoClose: true\r\n          });\r\n    \r\n      \r\n\r\n        return () => {\r\n            \r\n        }\r\n    },[])\r\n\r\n    const dob = useRef()\r\n\r\n    const [details, setDetails] = useState({\r\n        firstName:'',\r\n        lastName:'',\r\n        email:'',\r\n        mobileNumber:'',\r\n        password:'',\r\n        profilePicture:'',\r\n        gender:'male',\r\n        dateOfBirth:''\r\n    })\r\n\r\n    const [confirmPassword, setconfirmPassword] = useState('')\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const [errors, setErrors] = useState({\r\n        email:'',\r\n        password:'',\r\n        picture:''\r\n    })\r\n\r\n    const handleSubmit = async (event) =>\r\n    {\r\n        \r\n        event.preventDefault()\r\n\r\n        if(details.password !== confirmPassword)\r\n        {\r\n            setErrors({\r\n                email:'',\r\n                password:'Please Enter same password in both fields',\r\n                picture:''\r\n            })\r\n            return\r\n        }\r\n\r\n        if(details.profilePicture ==='')\r\n        {\r\n            setErrors({\r\n                email:'',\r\n                password:'',\r\n                picture:'Please Select Profile Picture'\r\n            })\r\n            return\r\n        }\r\n\r\n        console.log(details)\r\n        setIsLoading(true)\r\n        setErrors({\r\n            email:'',\r\n            password:'',\r\n            picture:''\r\n        })\r\n\r\n        \r\n        details.dateOfBirth = dob.current.value\r\n        setTimeout(async () => {\r\n            \r\n            const result = await SignUpFormSubmit(details)\r\n            console.log(result)\r\n            setIsLoading(false)\r\n\r\n        if(result.errors)\r\n        {\r\n            setErrors({password:result.errors.password,email:result.errors.email})\r\n        }\r\n\r\n        else\r\n        {\r\n            dispatch({type:\"AUTHENTICATED\",payload:result.data.user})\r\n        }\r\n            \r\n        }, 1500);\r\n\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className='row upper-padding-small'>\r\n            <form className='col s12 l10 m10 offset-m1 offset-l1 center white' style={{\"padding\":\"50px\"}} \r\n            onSubmit={(e) => handleSubmit(e)}>\r\n                <div className=\"row\">\r\n                    <div className=\"input-field col s12 l6\">\r\n                    <i class=\"material-icons prefix\">spellcheck</i>\r\n                        <input required={true}\r\n                        value={details.firstName} \r\n                        onChange={(e) => {setDetails({...details,firstName:e.target.value})}  }\r\n                        id=\"first_name\" type=\"text\" className=\"validate\"/>\r\n                        <span className=\"helper-text\" data-error=\"Please Enter First Name\" data-success=\"\"></span>\r\n                        <label for=\"first_name\">First Name</label>\r\n                    </div>\r\n                    <div className=\"input-field col s12 l6\">\r\n                    <i class=\"material-icons prefix\">spellcheck</i>\r\n                        <input  required={true}  id=\"last_name\" \r\n                        value={details.lastName} \r\n                        onChange={(e) => {setDetails({...details,lastName:e.target.value})}  }\r\n                        type=\"text\" className=\"validate\"/>\r\n                        <span className=\"helper-text\" data-error=\"Please Enter Last Name\" data-success=\"\"></span>\r\n                        <label for=\"last_name\">Last Name</label>\r\n                    </div>\r\n                 </div>\r\n                 <div className=\"row\">\r\n                    <div className=\"input-field col s12 l6\">\r\n                    <i class=\"material-icons prefix\">email</i>\r\n                        <input  required={true} id=\"email\" \r\n                         value={details.email} \r\n                         onChange={(e) => {setDetails({...details,email:e.target.value})}  }\r\n                         type=\"email\" className=\"validate\"/>\r\n                        <label for=\"email\">Email</label>\r\n                        <span className=\"helper-text\" data-error=\"Please Enter a valid Email Address\" data-success=\"\"></span>\r\n                        <span className='red-text'>{errors.email}</span>\r\n                    </div>\r\n                    <div className=\"input-field col s12 l6\">\r\n                    <i class=\"material-icons prefix\">phone</i>\r\n                        <input  required={true} id=\"mobile_number\" \r\n                         value={details.mobileNumber} \r\n                         onChange={(e) => {setDetails({...details,mobileNumber:e.target.value})}  }\r\n                         type=\"text\" className=\"validate\"/>\r\n                        <label for=\"mobile_number\">Mobile Number</label>\r\n                        <span className=\"helper-text\" data-error=\"Please Enter Mobile Number\" data-success=\"\"></span>\r\n                    </div>\r\n                 </div>\r\n                 <div className=\"row\">\r\n                    <div className=\"input-field col s12 l6\">\r\n                    <i class=\"material-icons prefix\">vpn_key</i>\r\n                        <input  required={true} id=\"password\" \r\n                         value={details.password} \r\n                         onChange={(e) => {setDetails({...details,password:e.target.value})}  }\r\n                         type=\"password\" className=\"validate\"/>\r\n                        <label for=\"password\">Password</label>\r\n                        <span className=\"helper-text\" data-error=\"Please Enter Password\" data-success=\"\"></span>\r\n                        <span className='red-text'>{errors.password}</span>\r\n                    </div>\r\n                    <div className=\"input-field col s12 l6\">\r\n                    <i class=\"material-icons prefix\">vpn_key</i>\r\n                        <input  required={true} id=\"confirm_password\" \r\n                        value={confirmPassword}\r\n                        onChange={(e) => {setconfirmPassword(e.target.value)}  }\r\n                        type=\"password\" className=\"validate\"/>\r\n                        <label for=\"confirm_password\">Confirm Password</label>\r\n                        <span className=\"helper-text\" data-error=\"Please Confirm Password\" data-success=\"\"></span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div classNamess=\"row\">\r\n                    <div className=\"input-field col s12 l12\">\r\n                    <i class=\"material-icons prefix\">calendar_today</i>\r\n                    <input required={true} id=\"birthdate\" \r\n                    type=\"text\" className=\"datepicker\" defaultValue='' ref={dob}/>\r\n                        <label for=\"birthdate\">Date of Birth</label>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\" style={{'padding-top':\"100px\"}} onChange={(e) => {setDetails({...details,gender:e.target.value})}}>\r\n                     <i style={{'font-size':\"50px\"}} class=\"fa fa-male col prefix\"></i>\r\n                    <div className=\"col\">\r\n                        <p>\r\n                        <label>\r\n                            <input name=\"gender\" type=\"radio\" value=\"male\" defaultChecked />\r\n                            <span>Male</span>    \r\n                        </label>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <p>\r\n                        <label>\r\n                            <input name=\"gender\" type=\"radio\"  value=\"female\" />\r\n                            <span>Female</span>    \r\n                        </label>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <p >\r\n                        <label>\r\n                            <input name=\"gender\" type=\"radio\" value=\"other\" />\r\n                            <span>Other</span>    \r\n                        </label>\r\n                        </p>\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className='col s12'>\r\n                    <div class=\"file-field input-field\">\r\n                        <div class=\"btn grey darken-1\">\r\n                        <span>\r\n                                      <i class=\"material-icons left\">linked_camera</i>  Profile Picture\r\n                                        </span>\r\n                            <FileBase type=\"file\" className=\" \" multiple={false} \r\n                                onDone={({base64}) => {setDetails({...details,profilePicture:base64})} }>\r\n                                </FileBase>\r\n                        </div>\r\n                        <div class=\"file-path-wrapper\">\r\n                            <input class=\"file-path validate\" type=\"text\" />\r\n                        </div>\r\n                        </div>\r\n                        <p class='red-text text-lighten-1'>{errors.picture}</p>\r\n                   \r\n                    </div>\r\n                </div>\r\n                 \r\n\r\n                \r\n                 \r\n                 <button className='btn btn-large grey darken-1 hoverable' style={{'margin-top':\"15px\"}}>Sign Up</button>\r\n\r\n\r\n                 {isLoading?(\r\n                    <div className=\"row\" style={{\"margin-top\":\"25px\"}}>\r\n                     <div className=\"preloader-wrapper big active\">\r\n                     <div className=\"spinner-layer spinner-green-only\">\r\n                       <div className=\"circle-clipper left\">\r\n                         <div className=\"circle\"></div>\r\n                       </div><div className=\"gap-patch\">\r\n                         <div className=\"circle\"></div>\r\n                       </div><div className=\"circle-clipper right\">\r\n                         <div className=\"circle\"></div>\r\n                       </div>\r\n                     </div>\r\n                   </div>\r\n                   </div>\r\n                ):''}\r\n\r\n            </form>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Home.js",["123","124","125","126","127","128","129","130","131"],"import React, { useEffect, useState } from 'react'\r\nimport materialize from 'materialize-css';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getPosts } from '../../actions/post'\r\nimport { logout } from '../../actions/auth'\r\nimport Posts from './Posts/Posts';\r\nimport './styles.css'\r\nimport Profile from './Profile/Profile'\r\nimport Friends from './Friends/Friends'\r\nimport {motion} from 'framer-motion'\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction Home() {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n\r\n        }\r\n    },[])\r\n\r\n    useEffect(() => {\r\n\r\n        return () => {\r\n\r\n        }\r\n    }, [dispatch])\r\n\r\n    const handleLogout = () =>\r\n    {\r\n\r\n        dispatch(logout())\r\n\r\n    } \r\n\r\n    const openNav = () => {\r\n        document.getElementById(\"mySidenav\").style.width = \"250px\";\r\n      }\r\n      \r\n\r\n      const closeNav = () => {\r\n        document.getElementById(\"mySidenav\").style.width = \"0\";\r\n      } \r\n\r\n    return (\r\n        <div>\r\n\r\n            <Router>\r\n                <div>\r\n                    <div class=\"navbar-fixed grey darken-4\"\r\n                        >\r\n                        <nav class=\"grey darken-4\">\r\n                            <div class=\"nav-wrapper grey darken-4 container\">\r\n                                <a href=\"#\" class=\"brand-logo center\" ><span style={{\"font-size\":\"25px\"}} class=\"material-icons\">work</span></a>\r\n                                <a href=\"#\" data-target=\"mobile-demo\" class=\"sidenav-trigger\" onClick={() => openNav()}><i class=\"material-icons\">menu</i></a>\r\n                                <ul className=\"left hide-on-med-and-down\">\r\n                                    <li className=\"hoverlist\">\r\n                                        <Link to=\"/\">Home</Link>\r\n                                    </li>\r\n                                    <li className=\"hoverlist\">\r\n                                        <Link to=\"/profile\">View Profile</Link>\r\n                                    </li>\r\n                                    <li className=\"hoverlist\">\r\n                                        <Link to=\"/friends\">View Friends</Link>\r\n                                    </li>\r\n                                </ul>\r\n\r\n                                <ul className='right'>\r\n                                    <li>\r\n                                    <a style={{\"padding-top\":\"5px\"}}className='hover-link btn btn-large btn-flat transparent white-text right valign-wrapper' \r\n                                onClick ={(e) => {handleLogout()}}><span class='material-icons right'>logout</span>Logout &nbsp;</a>\r\n                                    </li>\r\n                                </ul>\r\n                    \r\n                            </div>\r\n\r\n\r\n                            <div id=\"mySidenav\" class=\"my-sidenav\">\r\n                                <a href=\"#\" class=\"closebtn\" onClick={() => closeNav()}>&times;</a>\r\n                                <Link to=\"/\" style={{\"font-size\":\"20px\"}}>Home</Link>\r\n                                <Link to=\"/profile\"  style={{\"font-size\":\"20px\"}}>View Profile</Link>\r\n                                <Link to=\"/friends\"  style={{\"font-size\":\"20px\"}}>View Friends</Link>\r\n                            </div>\r\n                            \r\n                        \r\n                        </nav>\r\n\r\n                    </div>\r\n\r\n                    <Switch>\r\n                        <Route path=\"/profile\">\r\n                            <div className='' style={{ 'margin-top': \"4rem\" }}>\r\n\r\n                                <Profile></Profile>\r\n\r\n                            </div>\r\n                        </Route>\r\n                        <Route path=\"/friends\">\r\n                            <div className='' style={{ 'margin-top': \"4rem\" }}>\r\n\r\n                                <Friends></Friends>\r\n\r\n                            </div>\r\n                        </Route>\r\n                        <Route path=\"/\">\r\n                            <div className='' style={{ 'margin-top': \"4rem\" }}>\r\n\r\n                                <Posts></Posts>\r\n\r\n                            </div>\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Home\r\n","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Authentication\\Wrapper.js",["132","133"],"import React,{useState,useEffect} from 'react'\r\nimport materialze from 'materialize-css'\r\nimport './styles.css'\r\nimport Signup from './Signup'\r\nimport Login from './Login'\r\n\r\nfunction Wrapper() {\r\n\r\n\r\n    const [isregister, setIsRegister] = useState(false)\r\n\r\n\r\n    return (\r\n        <div className='background'>\r\n\r\n            <div className='container center-align upper-padding'>\r\n\r\n                <div className='row'>\r\n\r\n                    <div className='col s6 l4 offset-l2'>\r\n                        <button className='btn btn-large right white darken-3 grey-text text-darken-2 hoverable'\r\n                        onClick={() => setIsRegister(true)}>\r\n                            <i class=\"material-icons left\">how_to_reg</i>Signup</button>\r\n                    </div>\r\n                    <div className='col s6 l4'>\r\n                        <button className='btn btn-large left white darken-3 grey-text text-darken-2 hoverable' \r\n                        onClick={() => setIsRegister(false)}>\r\n                        <i class=\"material-icons left\">login</i>Login</button>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n                {/* <div className='row'> */}\r\n                    {isregister?<Signup/>:<Login/>\r\n                    }\r\n                {/* </div> */}\r\n\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Wrapper\r\n","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Authentication\\Login.js",["134","135","136","137"],"import React,{useState,useEffect} from 'react'\r\nimport materialze from 'materialize-css'\r\nimport './styles.css'\r\nimport {LoginFormSubmit} from '../../actions/auth'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\n\r\nfunction Login() {\r\n\r\n\r\n    const [details, setDetails] = useState({\r\n        email:'',\r\n        password:''\r\n    })\r\n\r\n    const dispatch=useDispatch()\r\n\r\n    const [error, setError] = useState('')\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const handleSubmit = async (event) =>\r\n    {\r\n        event.preventDefault()\r\n        setIsLoading(true)\r\n        setError('')\r\n\r\n        setTimeout(async () => {\r\n            \r\n        const result = await LoginFormSubmit(details)\r\n        \r\n        setIsLoading(false)\r\n\r\n        if(result.error)\r\n        {\r\n            setError(result.error)\r\n        }\r\n\r\n        else\r\n        {\r\n            dispatch({type:\"AUTHENTICATED\",payload:result.data.user})\r\n        }\r\n            \r\n        }, 1500);\r\n        \r\n        \r\n    }\r\n\r\n    return (\r\n        <div className='row upper-padding-small'>\r\n\r\n            <form className='col s12 l6 offset-l3 m8 offset-m2 center white ' style={{\"padding\":\"50px\"}} onSubmit={(e) => handleSubmit(e)}>\r\n        \r\n                 <div className=\"row\">\r\n                    <div className=\"input-field col s12\">\r\n                     <i class=\"material-icons prefix\">email</i>\r\n                        <input id=\"email\" type=\"email\" className=\"validate\" required={true} value={details.email}\r\n                        onChange={(e) => setDetails({...details,email:e.target.value})} />\r\n                        <label for=\"email\">Email</label>\r\n                        <span className=\"helper-text\" data-error=\"Please Enter a valid Email\" data-success=\"\"></span>\r\n                    </div>\r\n                 </div>\r\n                 <div className=\"row\">\r\n                    <div className=\"input-field col s12\">\r\n                    <i class=\"material-icons prefix\">vpn_key</i>\r\n                        <input id=\"password\" type=\"password\" required={true} className=\"validate\" value={details.password}\r\n                        onChange={(e) => setDetails({...details,password:e.target.value})} />\r\n                        <label for=\"password\">Password</label>\r\n                        <span className=\"helper-text\" data-error=\"Please Enter a Password\" data-success=\"\"></span>\r\n                    </div>\r\n                 </div>\r\n\r\n                <button className='btn btn-large grey darken-1 hoverable'>Login</button>\r\n\r\n                {error?(<div className='row grey lighten-5' style={{\"margin-top\":'30px','padding':\"10px\"}}>\r\n                  <p className='center-align red-text'>\r\n                      <a className=\"btn-floating btn btn-small btn-flat transparent\"\r\n                      onClick={() => {setError('')}}><i class=\"material-icons left red-text\">cancel</i>\r\n                      </a>{error}</p>\r\n                </div>):''\r\n                }\r\n\r\n                {isLoading?(\r\n                    <div className=\"row\" style={{\"margin-top\":\"25px\"}}>\r\n                     <div className=\"preloader-wrapper big active\">\r\n                     <div className=\"spinner-layer spinner-green-only\">\r\n                       <div className=\"circle-clipper left\">\r\n                         <div className=\"circle\"></div>\r\n                       </div><div className=\"gap-patch\">\r\n                         <div className=\"circle\"></div>\r\n                       </div><div className=\"circle-clipper right\">\r\n                         <div className=\"circle\"></div>\r\n                       </div>\r\n                     </div>\r\n                   </div>\r\n                   </div>\r\n                ):''}\r\n\r\n            </form>\r\n        \r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\reducers\\index.js",[],"C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\reducers\\auth.js",[],"C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\actions\\auth.js",["138"],"import {SignUp,Login,getUserIdApi,logoutApi} from '../api/index'\r\n\r\nexport const SignUpFormSubmit = async (details) =>\r\n{\r\n    try\r\n    {\r\n     const user = await SignUp(details);\r\n     return user\r\n    }\r\n    catch(e){\r\n       \r\n        return e.response.data\r\n \r\n    }\r\n}\r\n\r\n\r\nexport const LoginFormSubmit = async (details) =>\r\n{\r\n    try\r\n    {\r\n     const user = await Login(details);\r\n     return user\r\n    }\r\n \r\n    catch(e){\r\n       \r\n     return e.response.data\r\n \r\n    }\r\n}\r\n\r\nexport const getUserId = async () =>\r\n{\r\n    try\r\n    {\r\n     const userId = await getUserIdApi();\r\n     return userId\r\n    }\r\n    catch(e){\r\n       \r\n        return e.response.data\r\n \r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => async (dispatch) =>\r\n{\r\n    try\r\n    {\r\n     const res = await logoutApi();\r\n     dispatch({type:\"NOT_AUTHENTICATED\"})\r\n    }\r\n    catch(e){\r\n       \r\n        console.log(e.response.data)\r\n \r\n    }\r\n}","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\api\\index.js",[],"C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\reducers\\post.js",[],"C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\actions\\post.js",[],"C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Posts\\Posts.js",["139","140","141","142","143","144","145"],"import React, { useEffect, useState, useRef } from 'react'\r\nimport materialize from 'materialize-css';\r\nimport './styles.css'\r\nimport FileBase from 'react-file-base64'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addPost, editPost } from '../../../actions/post'\r\nimport { getPosts } from '../../../actions/post'\r\nimport Post from './Post/Post'\r\nimport { motion } from \"framer-motion\"\r\nimport PropTypes from 'prop-types';\r\n\r\nconst imageVariant = {\r\n    hover:{\r\n      scale:1.2,\r\n      textShadow:\"0px 0px 8px rgb(255,255,255)\",\r\n      boxShadow:\"0px 0px 8px rgb(255,255,255)\",\r\n      transition:{\r\n        yoyo:Infinity,\r\n        duration:0.3\r\n      }\r\n     }\r\n  }\r\n\r\n  \r\nconst butVaraints = {\r\n    hover:{\r\n      scale:1.2,\r\n      textShadow:\"0px 0px 8px rgb(255,255,255)\",\r\n      boxShadow:\"0px 0px 8px rgb(255,255,255)\",\r\n      transition:{\r\n        yoyo:Infinity,\r\n        duration:0.3\r\n      }\r\n     }\r\n  }\r\n\r\n  const formVariants ={\r\n    hidden:\r\n    {\r\n      x:\"-15vw\",\r\n      opacity:0\r\n    },\r\n    visible:{\r\n      x:0,\r\n      opacity:1,\r\n      transition:{\r\n        type:\"spring\",\r\n        delay:0.5\r\n      }\r\n    },\r\n  }\r\n\r\n  const postsVariants ={\r\n    hidden:\r\n    {\r\n      x:\"-25vw\",\r\n      opacity:0\r\n    },\r\n    visible:{\r\n      x:0,\r\n      opacity:1,\r\n      transition:{\r\n        type:\"spring\",\r\n        delay:0.2\r\n      }\r\n    },\r\n  }\r\n  \r\nfunction Posts() {\r\n\r\n\r\n    const postStore = useSelector(state => state.post)\r\n\r\n    const postEdit = useSelector(state => state.editpost)\r\n    \r\n    const [isSending, setIsSending] = useState(false)\r\n\r\n    const [fileError, setFileError] = useState('')\r\n\r\n    const [message, setMessage] = useState('')\r\n\r\n    const [details, setDetails] = useState(\r\n        {\r\n            uid: '',\r\n            title: '',\r\n            description: '',\r\n            date: '',\r\n            tags: '',\r\n            images: []\r\n        })\r\n\r\n    const [isActive, setIsActive] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const store = useSelector(state => state.auth)\r\n\r\n    const loaderRef = useRef(null)\r\n\r\n    useEffect(() => {\r\n\r\n        var elems = document.querySelectorAll('.collapsible');\r\n        materialize.Collapsible.init(elems);\r\n        var elems1 = document.querySelectorAll('.chips');\r\n        materialize.Chips.init(elems1, {\r\n            placeholder: 'Enter tags for Your post',\r\n            secondaryPlaceholder: '+Tag',\r\n            onChipAdd: function (event, chip) {\r\n\r\n                console.log(chip.data, event)\r\n\r\n            }\r\n        });\r\n\r\n\r\n        return () => {\r\n\r\n            dispatch({ type: \"REMOVE_EDIT_POST_ID\" })\r\n\r\n        }\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        async function get() {\r\n            await dispatch(getPosts())\r\n        }\r\n\r\n        get()\r\n\r\n\r\n        if (postEdit) {\r\n            const currentPost = postStore.find((p) => p._id === postEdit)\r\n            setFileError('')\r\n            setDetails({\r\n                ...details,\r\n                _id: currentPost._id,\r\n                uid: currentPost.uid,\r\n                title: currentPost.title,\r\n                description: currentPost.description,\r\n                date: currentPost.date,\r\n                tags: currentPost.tags,\r\n                images: currentPost.images\r\n            })\r\n            setIsActive(true)\r\n        }\r\n        return () => {\r\n\r\n        }\r\n    }, [dispatch, postEdit])\r\n\r\n    const clear = () => {\r\n        setDetails({\r\n            uid: '',\r\n            title: '',\r\n            description: '',\r\n            date: '',\r\n            tags: '',\r\n            images: []\r\n        })\r\n        setIsActive(false)\r\n        dispatch({ type: \"REMOVE_EDIT_POST_ID\" })\r\n        setFileError('')\r\n        fileInput.current.value = \"\"\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(isSending)\r\n        {\r\n            loaderRef.current.scrollIntoView({\r\n                behavior: \"smooth\",\r\n                block: \"start\",\r\n                inline: \"start\"\r\n    \r\n              });\r\n        }\r\n        return () => {\r\n            \r\n        }\r\n    }, [isSending])\r\n\r\n    const handleSubmit = async (e) => {\r\n\r\n        e.preventDefault()\r\n\r\n        if(details.images.length===0)\r\n        {\r\n            setFileError('Please Select Atleast One File')\r\n            return\r\n        }\r\n\r\n        setFileError('')\r\n        \r\n\r\n        setIsSending(true)\r\n\r\n        if (postEdit) {\r\n\r\n            setTimeout(async () => {\r\n\r\n\r\n                const result = await dispatch(editPost(details))\r\n                clear()\r\n                setIsSending(false)\r\n                formRef.current.scrollIntoView({\r\n                    behavior: \"smooth\",\r\n                    block: \"nearest\",\r\n                    inline: \"start\"\r\n        \r\n                  });\r\n                if(result.POST_ERROR)\r\n                {\r\n                    setMessage('There was an error Editing Post')\r\n\r\n                    setTimeout(() => {\r\n\r\n                        setMessage('')\r\n                        \r\n                    }, 3000);\r\n                }\r\n\r\n                else\r\n                {\r\n                    setMessage('Post Successfully Edited')\r\n\r\n                    setTimeout(() => {\r\n\r\n                        setMessage('')\r\n                        \r\n                    }, 3000);\r\n                }\r\n                \r\n            }, 1000);\r\n        }\r\n\r\n        else {\r\n\r\n            setTimeout(async () => {\r\n\r\n                details.date = new Date()\r\n                const result = await dispatch(addPost(details))\r\n                clear()\r\n                setIsSending(false)\r\n                formRef.current.scrollIntoView({\r\n                    behavior: \"smooth\",\r\n                    block: \"nearest\",\r\n                    inline: \"start\"\r\n        \r\n                  });\r\n                if(result.POST_ERROR)\r\n                {\r\n                    setMessage('There was an error Adding Post')\r\n                    setTimeout(() => {\r\n\r\n                        setMessage('')\r\n                        \r\n                    }, 3000);\r\n                }\r\n\r\n                else\r\n                {\r\n                    setMessage('Post Successfully Added')\r\n\r\n                    setTimeout(() => {\r\n\r\n                        setMessage('')\r\n                        \r\n                    }, 3000);\r\n                }\r\n                \r\n            }, 1000);\r\n        }\r\n\r\n    }\r\n\r\n    const handleFileSubmit = async (e) => {\r\n\r\n        var images = e.target.files\r\n\r\n        const newImages = []\r\n\r\n        for (const image of images) {\r\n            let reader = new FileReader();\r\n            reader.readAsDataURL(image);\r\n            reader.onload = function () {\r\n                newImages.push(reader.result)\r\n                if (newImages.length === e.target.files.length) {\r\n                    setDetails({ ...details, images: [...details.images, ...newImages] })\r\n                }\r\n\r\n            };\r\n            reader.onerror = function (error) {\r\n                console.log('Error: ', error);\r\n            };\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const formRef = useRef(null)\r\n    const fileInput = useRef(null)\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"row\" \r\n              >\r\n\r\n                <motion.form ref={formRef} className=\"col s10 offset-s1 l4 offset-l1 m6 offset-m3 center white\" \r\n                onSubmit={(e) => handleSubmit(e)} style={{ \"padding\": \"30px\" }}\r\n                variants={formVariants}\r\n              animate=\"visible\"\r\n              initial=\"hidden\"\r\n              >\r\n\r\n                    <h6><u>{postEdit ? \"Edit Post\" : \"Add Post\"}</u></h6>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"input-field col s12\">\r\n                        <i class=\"material-icons prefix\">title</i>\r\n                            <input id=\"title\" type=\"text\" className='validate' value={details.title} required={true}\r\n                                onChange={(e) => setDetails({ ...details, title: e.target.value })} />\r\n                            <label for=\"title\" className={`${isActive ? \"active\" : \"\"}`}>Title</label>\r\n                            <span className=\"helper-text\" data-error=\"Please Give Your Post Title\" data-success=\"\"></span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"input-field col s12\">\r\n                        <i class=\"material-icons prefix\">description</i>\r\n                            <textarea id=\"textarea1\" className=\"materialize-textarea\" value={details.description} required={true}\r\n                                onChange={(e) => setDetails({ ...details, description: e.target.value })}></textarea>\r\n                            <label for=\"textarea1\" className={`${isActive ? \"active\" : \"\"}`}>Describe Your Post</label>\r\n                            <span className=\"helper-text\" data-error=\"Please Describe your Post\" data-success=\"\"></span>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    {/* <div class=\"chips chips-placeholder\">\r\n                    </div> */}\r\n\r\n                    <div class=\"row\">\r\n                        <div className=\"input-field col s12\">\r\n                        <i class=\"material-icons prefix\">local_offer</i>\r\n                            <input id=\"tags\" type=\"text\" className=\"validate\" value={details.tags}\r\n                                onChange={(e) => setDetails({ ...details, tags: e.target.value.split(',') })} />\r\n                            <label for=\"tags\" className={`${isActive ? \"active\" : \"\"} validate`}>Tags seperated by Comma</label>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n    \r\n\r\n                    <div className=\"row\">\r\n                        <div className='col s12'>\r\n                            <div className=\"image-upload \">\r\n                                <label for=\"file-input\">\r\n                                    <motion.span className=\"material-icons pointer indigo-text text-darken-1\" style={{ 'font-size': \"5rem\" }}\r\n                                    variants={imageVariant}\r\n                                    whileHover=\"hover\">\r\n                                    add_photo_alternate\r\n                                    </motion.span>\r\n                                </label>\r\n                                <input id='file-input' type=\"file\" className=\"\" multiple={true} required={false} ref={fileInput}\r\n                                onChange={(e) => handleFileSubmit(e)}\r\n                            >\r\n                            </input>\r\n                            </div>\r\n                            <span style={{'color':\"orangered\"}}>{fileError}</span>\r\n                          \r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='row'>\r\n\r\n                        {details.images.map((image, id) => {\r\n                            return (\r\n                                <a class=\"\" href='#none'\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        var array = [...details.images];\r\n                                        var index = array.indexOf(image)\r\n                                        if (index !== -1) {\r\n                                            array.splice(index, 1);\r\n                                            setDetails({ ...details, images: array })\r\n                                        }\r\n\r\n                                    }}\r\n                                ><img style={{ \"margin\": \"5px\" }} width={100} height={100} src={image} class=\"img-responsive hover-image\" />\r\n                                \r\n                                </a>\r\n                            )\r\n                        }\r\n                        )\r\n                        }\r\n\r\n                    </div>\r\n\r\n                    <div className='row'>\r\n\r\n                        <div className='col l6 s6 '>\r\n                            <button className='btn indigo right hoverable' style={{ 'margin-top': \"15px\" }}>Submit Post</button>\r\n                        </div>  \r\n                        <div className='col l6 s6 '>\r\n                            <button onClick={(e) => clear()} style={{ 'margin-top': \"15px\" }} class=\"btn left red hoverable\"><i class=\"material-icons left\">close</i>Clear</button>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    \r\n     \r\n                    {isSending ? (\r\n                      <div class='row' ref={loaderRef}>\r\n                            <div class=\"bouncing center col s4 offset-s4\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                        </div>\r\n                      </div>\r\n                      \r\n                    )\r\n                    :''}\r\n\r\n                    { message && (\r\n                        <div className='container grey lighten-4 z-depth-2' style={{\"padding\":'5px 10px'}}>\r\n                            <p style={{\"font-size\":\"17px\"}}><b>{message}</b></p>\r\n                        </div>\r\n                    )\r\n\r\n                    }\r\n\r\n\r\n\r\n\r\n                </motion.form>\r\n\r\n\r\n                {postStore.length === 0 ? (\r\n\r\n                    <div className='col l6 center  m6 offset-m3 '>\r\n                        <div class=\"preloader-wrapper big active\">\r\n                            <div class=\"spinner-layer spinner-blue-only\">\r\n                                <div class=\"circle-clipper left\">\r\n                                    <div class=\"circle\"></div>\r\n                                </div><div class=\"gap-patch\">\r\n                                    <div class=\"circle\"></div>\r\n                                </div><div class=\"circle-clipper right\">\r\n                                    <div class=\"circle\"></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                ) :\r\n                    <motion.div className=\"col l5 offset-l1 transparent hide-on-med-and-down\" style={{ \"padding\": '0px' }}\r\n                    variants={postsVariants}\r\n                    animate=\"visible\"\r\n                    initial=\"hidden\">\r\n                        {postStore.map(post =>\r\n                            <Post post={post} formRef={formRef}></Post>\r\n                        )}\r\n                    </motion.div>}\r\n                    \r\n\r\n\r\n            </div>\r\n\r\n            <div className='row hide-on-large-only'>\r\n                    <div className=\"col l5 offset-l1 transparent m8 offset-m2 s10 offset-s1 \" style={{ \"padding\": '0px' }}>\r\n                        {postStore.map(post =>\r\n                            <Post post={post} formRef={formRef}></Post>\r\n                        )}\r\n                    </div>\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Posts\r\n","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Posts\\Post\\Post.js",["146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161"],"import React, { useState, useEffect ,useRef} from 'react'\r\nimport Comments from './comments/Comments'\r\nimport { addLike, deletePost, removeLike } from '../../../../actions/post'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport moment from 'moment'\r\nimport materialize from 'materialize-css';\r\nimport './styles.css'\r\nimport { Carousel } from 'react-bootstrap';\r\nimport { motion } from \"framer-motion\"\r\nimport PropTypes from 'prop-types';\r\n\r\nconst commentsVariants ={\r\n    hidden:\r\n    {\r\n      y:\"-10vw\",\r\n      opacity:0\r\n    },\r\n    visible:{\r\n      y:0,\r\n      opacity:1,\r\n      transition:{\r\n        type:\"spring\",\r\n        delay:0.2\r\n      }\r\n    },\r\n  }\r\n\r\nfunction Post({ post, formRef }) {\r\n    \r\n\r\n    const dispatch = useDispatch()\r\n    const [comments, setComments] = useState(false)\r\n    const store = useSelector(state => state.auth)\r\n    const postEdit = useSelector(state => state.editpost)\r\n\r\n    const commentsRef = useRef(null)\r\n\r\n    const [liked, setliked] = useState(null)\r\n\r\n    const handleLike = async () => {\r\n        const details = {\r\n            _id: post._id,\r\n        }\r\n        const result = await dispatch(addLike(details))\r\n    }\r\n    const handleDislike = async () => {\r\n        const details = {\r\n            _id: post._id,\r\n        }\r\n        const result = await dispatch(removeLike(details))\r\n    }\r\n\r\n\r\n    const handleEdit = () => {\r\n        dispatch({ type: \"ADD_EDIT_POST_ID\", payload: post._id })\r\n        formRef.current.scrollIntoView({\r\n            behavior: \"smooth\",\r\n        });\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        dispatch(deletePost(post._id))\r\n        dispatch({ type: \"REMOVE_EDIT_POST_ID\" })\r\n    }\r\n\r\n    useEffect(() => {\r\n        var elems = document.querySelectorAll('.carousel');\r\n        var instances = materialize.Carousel.init(elems, {\r\n            fullWidth:true,\r\n            numVisible: 5\r\n        })\r\n\r\n        return () => {\r\n\r\n        }\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (post.likedUsers.includes(store.uid)) {\r\n            setliked(true)\r\n        }\r\n\r\n        else {\r\n            setliked(false)\r\n        }\r\n\r\n\r\n\r\n        return () => {\r\n\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        if(comments)\r\n        {\r\n            var element = commentsRef.current;\r\n        var headerOffset = 0;\r\n        var elementPosition = element.getBoundingClientRect().top;\r\n        var offsetPosition = elementPosition - headerOffset;\r\n    \r\n        window.scrollTo({\r\n            top: offsetPosition,\r\n            behavior: \"smooth\"\r\n        });\r\n        }\r\n\r\n        else\r\n        {\r\n            var element = commentsRef.current;\r\n        var headerOffset = 600;\r\n        var elementPosition = element.getBoundingClientRect().top;\r\n        var offsetPosition = elementPosition - headerOffset;\r\n    \r\n        window.scrollTo({\r\n            top: offsetPosition,\r\n            behavior: \"smooth\"\r\n        });\r\n        }\r\n        \r\n     }, [comments]);\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n            <div class=\"row\" key={post.id}>\r\n\r\n                <div class=\"col s12 l10 offset-l2\">\r\n                    <div class=\"card\">\r\n                        <div class=\"row\" style={{\"padding\":\"20px 0px 5px 20px\"}}>\r\n\r\n                                    <img src={post.userProfilePicture} alt=\"\" style={{\"border-radius\":\"50%\"}} class=\"img-responsive-thumbnail\" />\r\n                                    <div class=\"black-text text-responsive-thumbnail\">\r\n                                        <p className=\"left\">{post.user}</p>\r\n                                        \r\n                                    </div>\r\n                            </div>\r\n                            \r\n                        <div class=\"card-image\">\r\n                         \r\n                            {post.images.length > 0 && \r\n                            \r\n                            <div class=\"carousel\">\r\n                                {post.images.map((image, id) => {\r\n                                    return (\r\n                                        <a class=\"carousel-item\" href={`#${id}`}><img src={image} class=\"\" /></a>\r\n                                    )\r\n                                }\r\n                                )\r\n                                }\r\n                                \r\n\r\n                            </div>\r\n                            \r\n                            }\r\n                            \r\n                            {post.uid === store.uid && (<><a class=\"btn-floating halfway-fab  indigo\"\r\n                            onClick={() => { handleEdit() }}><i class=\"material-icons\">edit</i></a>\r\n                            <a class=\"btn-floating halfway-fab  red\"\r\n                                onClick={() => { handleDelete() }}><i class=\"material-icons\">delete</i></a></>)}\r\n\r\n\r\n                        </div>\r\n\r\n                        <div class=\"card-content\">\r\n\r\n                            <p class='grey-text'>{moment(post.date).fromNow()}</p>\r\n                            {post.tags.map(tag => (\r\n                                <div class=\"chip grey lighten-1 white-text hoverable\" style={{\"margin\":\"15px 5px\",\"cursor\":\"pointer\"}}>\r\n                                {tag}\r\n                              </div>\r\n                            ))}\r\n                            <br></br>\r\n\r\n                            <span class=\"black-text\" style={{\"font-size\":\"20px\"}}>{post.title}</span>\r\n                            <hr className='grey-text text-lighten-2'></hr>\r\n                            <p>{post.description}</p>\r\n                        </div>\r\n\r\n                        <div class=\"card-action\">\r\n                            <div className='row margin-remove' style={{\"margin-bottom\":\"0px !important\"}}>\r\n\r\n                                <div className='col l6'>\r\n                                       <div className='row'>\r\n                                        <div className='col l6'>\r\n                                                {!liked ? (\r\n                                                    <a class=\"btn-floating indigo right\"\r\n                                                        onClick={() => { handleLike() }}><i class=\"material-icons\">thumb_up</i></a>\r\n                                                ) :\r\n                                                    (<a class=\"btn-floating right red\"\r\n                                                        onClick={() => { handleDislike() }}><i class=\"material-icons  \">thumb_down</i></a>)}\r\n                                            </div>\r\n\r\n                                            <div className='col l6'>\r\n                                                <p className='left'>{post.likeCount}</p>\r\n                                            </div> \r\n                                        \r\n                                         </div>  \r\n\r\n                                </div>\r\n                                <div className='col l6 right'>\r\n                                       \r\n                                    <div className='row'>\r\n                                         <div className='col l6'>\r\n\r\n                                            <a class={`btn-floating ${comments?'red darken-2':'indigo'} right`}\r\n                                                onClick={() => { \r\n                                                    setComments(!comments)\r\n                                                    \r\n                                                     }}><i class=\"material-icons\">comment</i></a>\r\n\r\n                                            </div>\r\n\r\n                                            <div className='col l6'>\r\n                                            <p className='left'>{post.comments.length}</p>\r\n                                            </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n    \r\n                        <div ref={commentsRef} >\r\n                        {comments &&<motion.div className='row transparent'\r\n                        variants={commentsVariants}\r\n                        animate=\"visible\"\r\n                        initial=\"hidden\">\r\n                             <Comments postId={post._id} comments={post.comments}></Comments></motion.div>}\r\n                             </div>\r\n\r\n\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nPost.propTypes = {\r\n    formRef: PropTypes.oneOfType([\r\n        PropTypes.func, \r\n        PropTypes.shape({ current: PropTypes.instanceOf(Element) })\r\n    ]),\r\n    post: PropTypes.shape({\r\n        _id:PropTypes.string,\r\n        comments:PropTypes.array,\r\n        date:PropTypes.string,\r\n        description:PropTypes.string,\r\n        images:PropTypes.array,\r\n        likeCount:PropTypes.number,\r\n        likedUsers:PropTypes.array,\r\n        tags:PropTypes.array,\r\n        title:PropTypes.string,\r\n        uid:PropTypes.string,\r\n        user:PropTypes.string,\r\n        userProfilePicture:PropTypes.string\r\n      }),\r\n    \r\n  }\r\n\r\n\r\nexport default Post\r\n","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Posts\\Post\\comments\\Comments.js",["162","163","164","165"],"import React, { useEffect, useState } from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport { addComments,addLike } from '../../../../../actions/post'\r\nimport moment from 'moment'\r\nimport './styles.css'\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Comments({postId,comments}) {\r\n\r\n    \r\n    const store = useSelector(state => state.auth)\r\n    const dispatch=useDispatch()\r\n    \r\n    const handleSubmit = async (e) =>\r\n    {\r\n        e.preventDefault()\r\n        details.date = new Date()\r\n        const result = await dispatch(addComments(details))\r\n\r\n        setDetails({\r\n            ...details,\r\n            text:'',\r\n        })\r\n\r\n    }\r\n\r\n\r\n    const [details, setDetails] = useState({\r\n        postId:postId,\r\n        text:'',\r\n        date:''\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        // async function get()\r\n        // {\r\n        //     const result = await dispatch(getComments({postId:postId}))\r\n        //     console.log(\"ASDSDASD\",result)\r\n        // }\r\n\r\n        // get()\r\n\r\n        console.log(comments)\r\n        \r\n        return () => {\r\n            \r\n        }\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className=\"row\" style={{'padding':\"20px\",'border-top':'1px solid rgba(160,160,160,0.2)'}}>\r\n            <form className=\"col s12\" onSubmit={(e) => handleSubmit(e)}>\r\n\r\n                <div className='row'>\r\n                    <div class=\"input-field col s10 l9 offset-l1 grey-text text-darken-1\">\r\n                        <i class=\"material-icons prefix\">comment</i>\r\n                        <textarea id=\"textarea-comments\" class=\"materialize-textarea valdiate\" required={true}\r\n                        onChange={(e) => setDetails({...details,text:e.target.value}) } value={details.text}></textarea>\r\n                        <label for=\"textarea-comments\">Write your comment</label>\r\n                    </div>\r\n\r\n                   <div className='col l2'>\r\n                    <button class=\"btn-floating btn-flat transparent left\" type=\"submit\" style={{'margin-top':\"18px\"}} name=\"action\">\r\n                        <i class=\"material-icons grey-text text-darken-1\">send</i>\r\n                        </button>\r\n                   </div>\r\n\r\n                </div>\r\n                    \r\n                </form>\r\n                \r\n            </div>\r\n\r\n\r\n            {comments.length > 0 &&\r\n            \r\n            (<div className='row comments-row'>\r\n            <div className='col l10 offset-l1 s10 offset-s1'>\r\n                \r\n            {comments.map(\r\n                \r\n                comment =>\r\n                \r\n                (\r\n\r\n                    <div class=\"card row  grey lighten-5 z-depth-1\" style={{\"padding\":\"10px 0px 0 20px\"}}>\r\n                    <div class=\"col s2\">\r\n                        {/* <img src={comment.userProfilePicture} alt=\"\" style={{\"border-radius\":\"50%\"}} class=\"responsive-img\" /> */}\r\n                        <img src={comment.userProfilePicture} alt=\"\" style={{\"border-radius\":\"50%\"}} class=\"img-responsive-thumbnail\" />\r\n                                    <div class=\"black-text text-responsive-thumbnail\">\r\n                                        {/* <p className=\"left\">{comment.user}</p> */}\r\n                                        \r\n                                    </div>\r\n                        \r\n                        \r\n                    </div>\r\n                    <div class=\"col s9\">\r\n                        <div class=\"black-text left\">\r\n                            <span className=\"\" style={{\"font-size\":\"13px\"}}>{comment.user}</span> \r\n                            <p style={{\"font-size\":\"11px\",'margin':'0px'}} className='grey-text'> &nbsp;{moment(comment.date).fromNow()}</p>\r\n                            <p style={{\"font-size\":\"13px\"}} class='black-text'>{comment.comment}</p>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                     </div>\r\n\r\n\r\n                )\r\n                \r\n                \r\n                )}\r\n            </div>\r\n\r\n            </div>)\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nComments.propTypes = {\r\n    \r\n     postId:PropTypes.string,\r\n     comments: PropTypes.arrayOf(PropTypes.shape({\r\n        comments: PropTypes.string,\r\n        date: PropTypes.string,\r\n        user:PropTypes.string,\r\n        userProfilePicture:PropTypes.string\r\n      })),\r\n    \r\n  }\r\n\r\n\r\nexport default Comments\r\n","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Profile\\Profile.js",["166","167","168","169","170"],"import React, { useEffect, useState,useRef } from 'react'\r\nimport materialize from 'materialize-css';\r\nimport './styles.css'\r\nimport FileBase from 'react-file-base64'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getProfile } from '../../../actions/profile'\r\nimport EditProfile from './Editprofile/Editprofile'\r\nimport { motion } from \"framer-motion\"\r\n\r\nconst profileVariant ={\r\n    hidden:\r\n    {\r\n      x:\"-15vw\",\r\n      opacity:0\r\n    },\r\n    visible:{\r\n      x:0,\r\n      opacity:1,\r\n      transition:{\r\n        type:\"spring\",\r\n        delay:0.2\r\n      }\r\n    },\r\n  }\r\n\r\n  const editProfileVariant ={\r\n    hidden:\r\n    {\r\n      x:\"-15vw\",\r\n      opacity:0\r\n    },\r\n    visible:{\r\n      x:0,\r\n      opacity:1,\r\n      transition:{\r\n        type:\"spring\",\r\n        delay:0.2\r\n      }\r\n    },\r\n  }\r\n\r\n\r\n\r\nfunction Profile() {\r\n\r\n    const dispatch = useDispatch()\r\n    const profileStore = useSelector(state => state.profile)\r\n\r\n    const [editProfile, setEditProfile] = useState(false)\r\n\r\n    useEffect(() => {\r\n        var elems = document.querySelectorAll('.materialboxed');\r\n        var instances = materialize.Materialbox.init(elems);\r\n        return () => {\r\n            \r\n        }\r\n    },)\r\n\r\n    useEffect(() => {\r\n\r\n        async function get() {\r\n            await dispatch(getProfile())\r\n        }\r\n        get()\r\n\r\n\r\n        return () => {\r\n        }\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <>\r\n            {profileStore.firstName && \r\n            <div className='row profile-card'>\r\n                <div className={`col s10 offset-s1 ${editProfile?'l4 offset-l1':'l6 offset-l3'} transparent`}>\r\n\r\n                <motion.div class=\"card\" variants={profileVariant}\r\n              animate=\"visible\"\r\n              initial=\"hidden\" >\r\n                    <div class=\"card-image\">\r\n                        <img src={profileStore.profilePicture} className='materialboxed'/>\r\n                        <a class=\"btn-floating halfway-fab indigo\"\r\n                        onClick={() => {\r\n                            setEditProfile(!editProfile)\r\n                        }\r\n                        \r\n                        }\r\n                        ><i class=\"material-icons\">edit</i></a>\r\n                    </div>\r\n                    <div class=\"card-content\">\r\n                        <h3>{profileStore.firstName.toUpperCase()} {profileStore.lastName.toUpperCase()}</h3>\r\n                        <br></br>\r\n                        <h4> {profileStore.gender.toUpperCase()} </h4>\r\n                        <br></br>\r\n                        <p>{profileStore.mobileNumber}</p>\r\n                        <p>{new Date(profileStore.dateOfBirth).toDateString()}</p>\r\n                    </div>\r\n                </motion.div>\r\n\r\n                </div>\r\n\r\n            \r\n\r\n                {editProfile && (<motion.div className='col s10 offset-s1 l5 offset-l1 white hide-on-med-and-down' variants={editProfileVariant}\r\n                    animate=\"visible\"\r\n                    initial=\"hidden\">\r\n                    <EditProfile ></EditProfile>\r\n                </motion.div>)}\r\n\r\n            </div>}\r\n\r\n            {editProfile && (<div className='row hide-on-large-only'>\r\n                <div className='col white s10 offset-s1'>\r\n                    <EditProfile></EditProfile>\r\n                </div>\r\n            </div>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\actions\\profile.js",[],"C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\reducers\\profile.js",[],"C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Profile\\Editprofile\\Editprofile.js",["171","172","173","174"],"import React,{useState,useEffect,useRef} from 'react'\r\nimport FileBase from 'react-file-base64'\r\nimport { useStore } from 'react-redux'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport materialize from 'materialize-css';\r\nimport {editProfile} from '../../../../actions/profile'\r\nimport './styles.css'\r\nimport { motion } from \"framer-motion\"\r\n\r\n\r\nfunction Editprofile() {\r\n\r\n    const profileStore = useSelector(state=>state.profile)\r\n    const dispatch=useDispatch()\r\n    const [details, setDetails] = useState({\r\n        firstName:'',\r\n        lastName:'',\r\n        mobileNumber:'',\r\n        profilePicture:'',\r\n        gender:'',\r\n        dateOfBirth:'',\r\n        uid:'',\r\n        _id:''\r\n\r\n    })\r\n\r\n    const otherRef = useRef(null)\r\n    const maleRef = useRef(null)\r\n    const femaleRef = useRef(null)\r\n    const loaderRef = useRef(null)\r\n\r\n    const [isSending, setIsSending] = useState(false)\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dob = useRef(profileStore.dateOfBirth)\r\n    useEffect(() => {\r\n\r\n        var element = document.querySelectorAll('.datepicker');\r\n        materialize.Datepicker.init(element, {\r\n            container: \"html\",\r\n            onSelect: function(date) {\r\n                setDetails({...details,dateOfBirth:dob.current.value})\r\n            },\r\n            minDate: new Date(1950,1,1),\r\n            maxDate: new Date(2015,1,1),\r\n            yearRange:[1970,2015],\r\n            autoClose: true,\r\n            defaultDate:new Date(profileStore.dateOfBirth)\r\n          });\r\n          \r\n        \r\n        return () => {\r\n            \r\n        }\r\n    },[])\r\n\r\n    useEffect(() => {\r\n\r\n        setDetails({\r\n            firstName:profileStore.firstName,\r\n            lastName:profileStore.lastName,\r\n            mobileNumber:profileStore.mobileNumber,\r\n            profilePicture:profileStore.profilePicture,\r\n            gender:profileStore.gender,\r\n            uid:profileStore.uid,\r\n            _id:profileStore._id,\r\n            dateOfBirth:new Date(profileStore.dateOfBirth).toDateString()})\r\n\r\n        if(profileStore.gender===\"male\")\r\n        {\r\n            maleRef.current.checked = true\r\n        }\r\n        else if(profileStore.gender===\"female\")\r\n        {\r\n            femaleRef.current.checked = true\r\n        }\r\n        else\r\n        {\r\n            otherRef.current.checked = true\r\n        }\r\n\r\n\r\n        return () => {\r\n            \r\n        }\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        if(isSending)\r\n        {\r\n            loaderRef.current.scrollIntoView({\r\n                behavior: \"smooth\",\r\n                block: \"start\",\r\n                inline: \"start\"\r\n    \r\n              });\r\n        }\r\n        return () => {\r\n            \r\n        }\r\n    }, [isSending])\r\n\r\n    const handleSubmit = async (e) =>\r\n    {\r\n        e.preventDefault()\r\n\r\n        setIsSending(true)\r\n\r\n        if(dob.current.value)\r\n        details.dateOfBirth = dob.current.value\r\n        console.log(\"YOWTF\")\r\n\r\n        setTimeout(async () => {\r\n\r\n            const result = await dispatch(editProfile(details))\r\n            setIsSending(false)\r\n            // formRef.current.scrollIntoView({\r\n            //     behavior: \"smooth\",\r\n            //     block: \"nearest\",\r\n            //     inline: \"start\"\r\n    \r\n            //   });\r\n            if(result.EDIT_PROFILE_ERROR)\r\n            {\r\n                setMessage('There was an error Editing Profile')\r\n\r\n                setTimeout(() => {\r\n\r\n                    setMessage('')\r\n                    \r\n                }, 3000);\r\n            }\r\n\r\n            else\r\n            {\r\n                setMessage('Profile Successfully Edited')\r\n\r\n                setTimeout(() => {\r\n\r\n                    setMessage('')\r\n                    \r\n                }, 3000);\r\n            }\r\n            \r\n        }, 1500);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='row'  >\r\n           <form className=' col s10 offset-s1 l12 center' onSubmit={(e) => handleSubmit(e)} style={{ \"padding\": \"30px\" }}>\r\n\r\n               <h6 style={{ \"margin-bottom\": \"30px\" }} className='center'><u>Edit Profile</u> </h6>\r\n\r\n               <div className=\"row\">\r\n                    <div className=\"input-field col s12 l12\">\r\n                    <i class=\"material-icons prefix\">spellcheck</i>\r\n                        <input required={true}\r\n                        value={details.firstName} \r\n                        onChange={(e) => {setDetails({...details,firstName:e.target.value})}  }\r\n                        id=\"first_name\" type=\"text\" className=\"validate\"/>\r\n                        <span className=\"helper-text\" data-error=\"Please Enter First Name\" data-success=\"\"></span>\r\n                        <label for=\"first_name\" className='active'>First Name</label>\r\n                    </div>\r\n                    <div className=\"input-field col s12 l12\">\r\n                    <i class=\"material-icons prefix\">spellcheck</i>\r\n                        <input  required={true}  id=\"last_name\" \r\n                        value={details.lastName} \r\n                        onChange={(e) => {setDetails({...details,lastName:e.target.value})}  }\r\n                        type=\"text\" className=\"validate\"/>\r\n                        <span className=\"helper-text\" data-error=\"Please Enter Last Name\" data-success=\"\"></span>\r\n                        <label for=\"last_name\"  className='active'>Last Name</label>\r\n                    </div>\r\n                 </div>\r\n                 <div className=\"row\">\r\n                    <div className=\"input-field col s12 l12\">\r\n                    <i class=\"material-icons prefix\">phone</i>\r\n                        <input  required={true} id=\"mobile_number\" \r\n                         value={details.mobileNumber} \r\n                         onChange={(e) => {console.log(details);setDetails({...details,mobileNumber:e.target.value});console.log(details);}  }\r\n                         type=\"text\" className=\"validate\"/>\r\n                        <label for=\"mobile_number\"  className='active'>Mobile Number</label>\r\n                        <span className=\"helper-text\" data-error=\"Please Enter Mobile Number\" data-success=\"\"></span>\r\n                    </div>\r\n                 </div>\r\n\r\n                <div classNamess=\"row\">\r\n                    <div className=\"input-field col s12 l12\">\r\n                    <i class=\"material-icons prefix\">calendar_today</i>\r\n                    <input required={true} id=\"birthdate\" \r\n                    defaultValue={details.dateOfBirth}\r\n                    type=\"text\" className=\"datepicker\" ref={dob}/>\r\n                        <label for=\"birthdate\"  className='active'>Date of Birth</label>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\"  style={{'padding-top':\"100px\"}}  onChange={(e) => {setDetails({...details,gender:e.target.value})}}>\r\n                <i style={{'font-size':\"50px\"}} class=\"fa fa-male col prefix\"></i>\r\n                    <div className=\"col\">\r\n                        <p>\r\n                        <label>\r\n                            <input name=\"gender\" type=\"radio\" value=\"male\" ref={maleRef} />\r\n                            <span>Male</span>    \r\n                        </label>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <p>\r\n                        <label>\r\n                            <input name=\"gender\" type=\"radio\"  value=\"female\" ref={femaleRef}/>\r\n                            <span>Female</span>    \r\n                        </label>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <p >\r\n                        <label>\r\n                            <input name=\"gender\" type=\"radio\" value=\"other\" ref={otherRef} />\r\n                            <span>Other</span>    \r\n                        </label>\r\n                        </p>\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className='col s12'>\r\n                    {/* <span>Profile Picture - </span>\r\n                    <FileBase type=\"file\" className=\" \" multiple={false} \r\n                    onDone={({base64}) => {setDetails({...details,profilePicture:base64})} }>\r\n                    </FileBase> */}\r\n                      <div class=\"file-field input-field\">\r\n                        <div class=\"btn indigo\">\r\n                        <span>\r\n                                      <i class=\"material-icons left\">linked_camera</i>Profile Picture\r\n                                        </span>\r\n                            <FileBase type=\"file\" className=\" \" multiple={false} \r\n                                onDone={({base64}) => {setDetails({...details,profilePicture:base64})} }>\r\n                                </FileBase>\r\n                        </div>\r\n                        <div class=\"file-path-wrapper\">\r\n                            <input class=\"file-path validate\" type=\"text\" />\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n                <div class='row'>\r\n                    <button type=\"submit\" className='btn btn-medium indigo hoverable' style={{'margin-top':\"15px\"}}>Edit Profile</button>\r\n                </div>\r\n\r\n                {isSending ? (\r\n                      <div class='row' ref={loaderRef} >\r\n\r\n                                    {/* <div class=\"square center col s4 offset-s4\">\r\n                                        <div></div>\r\n                                        <div></div>\r\n                                    </div> */}\r\n\r\n                            <div class=\"bouncing center col s4 offset-s4\">\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                        </div>\r\n                      </div>\r\n                      \r\n                    )\r\n                    :''}\r\n\r\n                    { message && (\r\n                        <div className='container center grey lighten-4 z-depth-2' style={{\"padding\":'5px 10px',\"margin-top\":'25px'}}>\r\n                            <p style={{\"font-size\":\"17px\"}}><b>{message}</b></p>\r\n                        </div>\r\n                    )\r\n\r\n                    }\r\n                 \r\n\r\n           </form>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Editprofile\r\n","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Friends\\Friends.js",["175","176","177","178","179","180","181","182","183","184"],"import React,{useEffect, useState} from 'react'\r\nimport materialize from 'materialize-css';\r\nimport './styles.css'\r\nimport FileBase from 'react-file-base64'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {getProfile,addFriend,acceptRequest} from '../../../actions/profile'\r\nimport {getUsers} from '../../../actions/users'\r\nimport FriendsChild from './FriendsChild';\r\n\r\nfunction Friends() {\r\n\r\n    const friends = useSelector(state => state.profile.friends)\r\n    const friendRequests = useSelector(state => state.profile.friendRequests)\r\n    const users = useSelector(state => state.users)\r\n\r\n    const [option, setOption] = useState('list')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        \r\n                async function get() \r\n            {\r\n                await dispatch(getProfile())\r\n            }\r\n            get()\r\n\r\n            async function getSomeUsers() \r\n            {\r\n                await dispatch(getUsers())\r\n            }\r\n            getSomeUsers()\r\n\r\n        \r\n        return () => {\r\n            \r\n        }\r\n    },[dispatch] )\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <div class='row'>\r\n\r\n\r\n            <div className='col l4 offset-l1 s10 offset-s1 white'>\r\n\r\n\r\n                                \r\n                    <div class=\"collection\" style={{\"padding\":\"40px\"}}>\r\n\r\n\r\n                        <a  class={`collection-item ${option==='list'&& 'active' }`} style={{\"padding\":\"20px\"}} onClick = {() => setOption('list')}>\r\n                            Friends List\r\n                            <span class=\"secondary-content\"><i class=\"material-icons\">send</i></span>\r\n                            </a>\r\n\r\n                        <a class={`collection-item ${option==='requests'&& 'active' }`} style={{\"padding\":\"20px\"}}  onClick = {() => setOption('requests')}>\r\n                            Friend Requests\r\n                            <span class=\"secondary-content\"><i class=\"material-icons\">send</i></span>\r\n                            </a>\r\n\r\n                        <a class={`collection-item ${option==='newFriends'&& 'active' }`} style={{\"padding\":\"20px\"}}   onClick = {() => setOption('newFriends')}>\r\n                            Find New Friends\r\n                            <span class=\"secondary-content\"><i class=\"material-icons\">send</i></span>\r\n                            </a>\r\n\r\n                    </div>\r\n            \r\n            </div>\r\n\r\n\r\n            <div className='col l5 offset-l1 hide-on-med-and-down'>\r\n\r\n                    <FriendsChild option={option}>\r\n\r\n                    </FriendsChild>\r\n\r\n            </div>\r\n\r\n            \r\n        </div>\r\n\r\n\r\n        <div className='row hide-on-large-only' style={{\"margin-top\":\"50px\"}}>\r\n\r\n            <div className='col s12 m8 offset-m2'>\r\n\r\n            <FriendsChild option={option}>\r\n\r\n            </FriendsChild>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Friends\r\n","C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\reducers\\users.js",[],"C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\actions\\users.js",[],"C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\reducers\\editpost.js",[],"C:\\Users\\Abhishek Thomas\\Desktop\\hyperverge_bootcamp\\social_media_project\\client\\src\\components\\Home\\Friends\\FriendsChild.js",["185","186","187","188","189"],"import React, { useEffect, useState } from 'react'\r\nimport materialize from 'materialize-css';\r\nimport './styles.css'\r\nimport FileBase from 'react-file-base64'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {getProfile,addFriend,acceptRequest,declineRequest} from '../../../actions/profile'\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction FriendsChild({ option }) {\r\n\r\n    const friends = useSelector(state => state.profile.friends)\r\n    const friendRequests = useSelector(state => state.profile.friendRequests)\r\n    const users = useSelector(state => state.users)\r\n    const profileStore = useSelector(state => state.profile)\r\n    const dispatch = useDispatch()\r\n\r\n    const addFriendHandler = async (e,_id) =>\r\n    {\r\n            e.preventDefault()\r\n            await dispatch(addFriend({_id:_id}))\r\n        \r\n    }\r\n\r\n    const acceptRequestHandler = async (e,friend) =>\r\n    {\r\n\r\n        e.preventDefault()\r\n        console.log(\"FASD\",friend)\r\n        await dispatch(acceptRequest({_id:friend._id,uid:friend.uid}))\r\n\r\n    }\r\n\r\n    const declineRequestHandler = async (e,friend) =>\r\n    {\r\n\r\n        e.preventDefault()\r\n        console.log(\"FASD\",friend)\r\n        await dispatch(declineRequest({_id:friend._id,uid:friend.uid}))\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        var elems = document.querySelectorAll('.modal');\r\n        materialize.Modal.init(elems)\r\n        return () => {\r\n            \r\n        }\r\n    }, [])\r\n\r\n\r\n    switch (option) {\r\n\r\n        case 'list':\r\n            return (\r\n                <div className='' style={{ 'padding': \"0px 20px\" }}>\r\n\r\n\r\n                    {friends && friends.length > 0 ?\r\n                    \r\n                        <ul class=\"collection\">\r\n\r\n                            {\r\n                                friends.map(\r\n\r\n                                    (friend,id) =>\r\n\r\n                                        (\r\n                                            <>\r\n                                                <li class=\"collection-item avatar\" style={{\"margin\":\"10px\"}}>\r\n                                                    <img src={friend.userProfilePicture} style={{\"margin-top\":\"10px\"}} alt=\"\" class=\"circle\" />\r\n                                                    <h5 class=\"\">{friend.user} </h5>\r\n                                                    <p>{friend.mobileNumber} <br></br>\r\n                                                        </p>\r\n                                                    <a href=\"#\"class=\"btn-floating indigo modal-trigger secondary-content\"><i style={{\"font-size\":\"30px\"}} class=\"material-icons right \">account_circle</i>Info</a>\r\n                                                </li>\r\n                                            </>\r\n\r\n                                        )\r\n\r\n\r\n                                )\r\n                            }\r\n                        </ul>\r\n\r\n                        : <div className='container center white' style={{\"padding\":\"20px\"}}>\r\n\r\n                            <h5>{friends && friends.length===0 && 'No Friends Yet'}</h5>\r\n                            </div>}\r\n\r\n                    {/* <ul class=\"collection\">\r\n                        <li class=\"collection-item avatar\">\r\n                        <img src=\"images/yuna.jpg\" alt=\"\" class=\"circle\" />\r\n                        <span class=\"title\">Title</span>\r\n                        <p>First Line <br></br>\r\n                            Second Line\r\n                        </p>\r\n                        <a href=\"#!\" class=\"secondary-content\"><i class=\"material-icons\">grade</i></a>\r\n                        </li>\r\n                    </ul> */}\r\n\r\n                </div>\r\n            )\r\n\r\n        case 'requests':\r\n            return (\r\n                <div className='' style={{ 'padding': \"0px 20px\" }}>\r\n\r\n\r\n                    {friendRequests && friendRequests.length > 0 ?\r\n\r\n                        <ul class=\"collection\">\r\n\r\n                            {\r\n                                friendRequests.map(\r\n\r\n                                    request =>\r\n\r\n                                        (\r\n                                            <>\r\n                                                <li class=\"collection-item avatar\" style={{\"margin\":\"10px\"}}>\r\n                                                    <img src={request.userProfilePicture} style={{\"margin-top\":\"10px\"}} alt=\"\" class=\"circle\" />\r\n                                                    <h5 class=\"\">{request.user} </h5>\r\n                                                    <p><button className='btn-small indigo '\r\n                                                        onClick={(e) => {acceptRequestHandler(e,request)}}>Add Friend</button>\r\n\r\n                                                            <button className='btn-small red lighten-1' style={{\"margin-left\":\"20px\"}}\r\n                                                        onClick={(e) => {declineRequestHandler(e,request)}}>Decline</button>\r\n                                                        </p>\r\n                                                   \r\n                                                    <a href=\"#!\" class=\"secondary-content\"><i class=\"material-icons\">user</i></a>\r\n                                                </li>\r\n                                            </>\r\n\r\n                                        )\r\n\r\n\r\n                                )\r\n                            }\r\n                        </ul>\r\n\r\n                        : <div className='container center white' style={{\"padding\":\"20px\"}}>\r\n\r\n                            <h5>{friendRequests && friendRequests.length===0 && 'No Friend Requests'}</h5>\r\n                            </div>}\r\n\r\n    \r\n\r\n                </div>\r\n            )\r\n\r\n        case 'newFriends':\r\n            return (\r\n\r\n                <div className='' style={{ 'padding': \"0px 20px\" }}>\r\n\r\n\r\n                    {users && users.length > 0 ?\r\n\r\n                        <ul class=\"collection\">\r\n\r\n                            {\r\n                                users.map(\r\n\r\n                                    user =>\r\n\r\n                                        (\r\n                                            <>\r\n                                                <li class=\"collection-item avatar\" style={{\"margin\":\"10px\"}}>\r\n                                                    <img src={user.profilePicture} style={{\"margin-top\":\"10px\"}}  alt=\"\" class=\"circle\" />\r\n                                                    <h5 class=\"\">{user.firstName} {user.lastName} </h5>\r\n                                                    <p><button className='btn-small indigo'\r\n                                                        onClick={(e) => {\r\n                                                            addFriendHandler(e,user._id)}}>Add Friend</button>\r\n                                                        </p>\r\n                                                    <a href=\"#!\" class=\"secondary-content\"><i class=\"material-icons\">user</i></a>\r\n                                                </li>\r\n                                            </>\r\n\r\n                                        )\r\n\r\n\r\n                                )\r\n                            }\r\n                        </ul>\r\n\r\n                        : <div className='container center white' style={{\"padding\":\"20px\"}}>\r\n\r\n                            <h5>{users && users.length===0 && 'No New Users'}</h5>\r\n                            </div>}\r\n\r\n    \r\n\r\n                </div>\r\n\r\n            )\r\n\r\n\r\n        default:\r\n            return (\r\n                <div>\r\n                    {option}\r\n\r\n                </div>\r\n            )\r\n\r\n    }\r\n}\r\n\r\n\r\nFriendsChild.propTypes = {\r\n    name: PropTypes.string\r\n  }\r\n\r\n  \r\nexport default FriendsChild\r\n",{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","severity":1,"message":"195","line":3,"column":20,"nodeType":"196","messageId":"197","endLine":3,"endColumn":26},{"ruleId":"194","severity":1,"message":"198","line":4,"column":3,"nodeType":"196","messageId":"197","endLine":4,"endColumn":9},{"ruleId":"194","severity":1,"message":"199","line":5,"column":3,"nodeType":"196","messageId":"197","endLine":5,"endColumn":8},{"ruleId":"194","severity":1,"message":"200","line":6,"column":3,"nodeType":"196","messageId":"197","endLine":6,"endColumn":7},{"ruleId":"194","severity":1,"message":"201","line":10,"column":9,"nodeType":"196","messageId":"197","endLine":10,"endColumn":17},{"ruleId":"194","severity":1,"message":"202","line":15,"column":8,"nodeType":"196","messageId":"197","endLine":15,"endColumn":14},{"ruleId":"203","severity":1,"message":"204","line":64,"column":5,"nodeType":"205","endLine":64,"endColumn":12,"suggestions":"206"},{"ruleId":"194","severity":1,"message":"207","line":5,"column":10,"nodeType":"196","messageId":"197","endLine":5,"endColumn":18},{"ruleId":"194","severity":1,"message":"208","line":6,"column":21,"nodeType":"196","messageId":"197","endLine":6,"endColumn":32},{"ruleId":"194","severity":1,"message":"209","line":1,"column":28,"nodeType":"196","messageId":"197","endLine":1,"endColumn":36},{"ruleId":"194","severity":1,"message":"210","line":2,"column":8,"nodeType":"196","messageId":"197","endLine":2,"endColumn":19},{"ruleId":"194","severity":1,"message":"208","line":3,"column":23,"nodeType":"196","messageId":"197","endLine":3,"endColumn":34},{"ruleId":"194","severity":1,"message":"201","line":4,"column":10,"nodeType":"196","messageId":"197","endLine":4,"endColumn":18},{"ruleId":"194","severity":1,"message":"211","line":10,"column":9,"nodeType":"196","messageId":"197","endLine":10,"endColumn":15},{"ruleId":"212","severity":1,"message":"213","line":63,"column":33,"nodeType":"214","endLine":63,"endColumn":72},{"ruleId":"212","severity":1,"message":"213","line":64,"column":33,"nodeType":"214","endLine":64,"endColumn":121},{"ruleId":"212","severity":1,"message":"215","line":79,"column":37,"nodeType":"214","endLine":80,"endColumn":68},{"ruleId":"212","severity":1,"message":"213","line":88,"column":33,"nodeType":"214","endLine":88,"endColumn":89},{"ruleId":"194","severity":1,"message":"216","line":1,"column":24,"nodeType":"196","messageId":"197","endLine":1,"endColumn":33},{"ruleId":"194","severity":1,"message":"217","line":2,"column":8,"nodeType":"196","messageId":"197","endLine":2,"endColumn":18},{"ruleId":"194","severity":1,"message":"216","line":1,"column":24,"nodeType":"196","messageId":"197","endLine":1,"endColumn":33},{"ruleId":"194","severity":1,"message":"217","line":2,"column":8,"nodeType":"196","messageId":"197","endLine":2,"endColumn":18},{"ruleId":"194","severity":1,"message":"208","line":5,"column":21,"nodeType":"196","messageId":"197","endLine":5,"endColumn":32},{"ruleId":"212","severity":1,"message":"215","line":75,"column":23,"nodeType":"214","endLine":76,"endColumn":54},{"ruleId":"194","severity":1,"message":"218","line":52,"column":12,"nodeType":"196","messageId":"197","endLine":52,"endColumn":15},{"ruleId":"194","severity":1,"message":"219","line":4,"column":8,"nodeType":"196","messageId":"197","endLine":4,"endColumn":16},{"ruleId":"194","severity":1,"message":"220","line":10,"column":8,"nodeType":"196","messageId":"197","endLine":10,"endColumn":17},{"ruleId":"194","severity":1,"message":"221","line":25,"column":7,"nodeType":"196","messageId":"197","endLine":25,"endColumn":18},{"ruleId":"194","severity":1,"message":"222","line":95,"column":11,"nodeType":"196","messageId":"197","endLine":95,"endColumn":16},{"ruleId":"203","severity":1,"message":"204","line":120,"column":8,"nodeType":"205","endLine":120,"endColumn":10,"suggestions":"223"},{"ruleId":"203","severity":1,"message":"224","line":150,"column":8,"nodeType":"205","endLine":150,"endColumn":28,"suggestions":"225"},{"ruleId":"226","severity":1,"message":"227","line":391,"column":34,"nodeType":"214","endLine":391,"endColumn":141},{"ruleId":"194","severity":1,"message":"228","line":8,"column":10,"nodeType":"196","messageId":"197","endLine":8,"endColumn":18},{"ruleId":"194","severity":1,"message":"229","line":34,"column":11,"nodeType":"196","messageId":"197","endLine":34,"endColumn":19},{"ruleId":"194","severity":1,"message":"230","line":44,"column":15,"nodeType":"196","messageId":"197","endLine":44,"endColumn":21},{"ruleId":"194","severity":1,"message":"230","line":50,"column":15,"nodeType":"196","messageId":"197","endLine":50,"endColumn":21},{"ruleId":"194","severity":1,"message":"231","line":68,"column":13,"nodeType":"196","messageId":"197","endLine":68,"endColumn":22},{"ruleId":"203","severity":1,"message":"232","line":79,"column":5,"nodeType":"196","endLine":79,"endColumn":14,"suggestions":"233"},{"ruleId":"234","severity":1,"message":"235","line":113,"column":17,"nodeType":"196","messageId":"236","endLine":113,"endColumn":24},{"ruleId":"234","severity":1,"message":"237","line":114,"column":13,"nodeType":"196","messageId":"236","endLine":114,"endColumn":25},{"ruleId":"234","severity":1,"message":"238","line":115,"column":13,"nodeType":"196","messageId":"236","endLine":115,"endColumn":28},{"ruleId":"234","severity":1,"message":"239","line":116,"column":13,"nodeType":"196","messageId":"236","endLine":116,"endColumn":27},{"ruleId":"226","severity":1,"message":"227","line":152,"column":82,"nodeType":"214","endLine":152,"endColumn":110},{"ruleId":"212","severity":1,"message":"215","line":163,"column":59,"nodeType":"214","endLine":164,"endColumn":62},{"ruleId":"212","severity":1,"message":"215","line":165,"column":29,"nodeType":"214","endLine":166,"endColumn":68},{"ruleId":"212","severity":1,"message":"215","line":193,"column":53,"nodeType":"214","endLine":194,"endColumn":90},{"ruleId":"212","severity":1,"message":"215","line":196,"column":54,"nodeType":"214","endLine":197,"endColumn":93},{"ruleId":"212","severity":1,"message":"215","line":212,"column":45,"nodeType":"214","endLine":216,"endColumn":57},{"ruleId":"194","severity":1,"message":"240","line":3,"column":22,"nodeType":"196","messageId":"197","endLine":3,"endColumn":29},{"ruleId":"194","severity":1,"message":"222","line":11,"column":11,"nodeType":"196","messageId":"197","endLine":11,"endColumn":16},{"ruleId":"194","severity":1,"message":"230","line":18,"column":15,"nodeType":"196","messageId":"197","endLine":18,"endColumn":21},{"ruleId":"203","severity":1,"message":"241","line":49,"column":7,"nodeType":"205","endLine":49,"endColumn":9,"suggestions":"242"},{"ruleId":"194","severity":1,"message":"243","line":1,"column":37,"nodeType":"196","messageId":"197","endLine":1,"endColumn":43},{"ruleId":"194","severity":1,"message":"219","line":4,"column":8,"nodeType":"196","messageId":"197","endLine":4,"endColumn":16},{"ruleId":"194","severity":1,"message":"231","line":53,"column":13,"nodeType":"196","messageId":"197","endLine":53,"endColumn":22},{"ruleId":"226","severity":1,"message":"227","line":81,"column":25,"nodeType":"214","endLine":81,"endColumn":91},{"ruleId":"212","severity":1,"message":"215","line":82,"column":25,"nodeType":"214","endLine":88,"endColumn":26},{"ruleId":"194","severity":1,"message":"207","line":3,"column":10,"nodeType":"196","messageId":"197","endLine":3,"endColumn":18},{"ruleId":"194","severity":1,"message":"211","line":8,"column":10,"nodeType":"196","messageId":"197","endLine":8,"endColumn":16},{"ruleId":"203","severity":1,"message":"244","line":55,"column":7,"nodeType":"205","endLine":55,"endColumn":9,"suggestions":"245"},{"ruleId":"203","severity":1,"message":"246","line":86,"column":7,"nodeType":"205","endLine":86,"endColumn":9,"suggestions":"247"},{"ruleId":"194","severity":1,"message":"210","line":2,"column":8,"nodeType":"196","messageId":"197","endLine":2,"endColumn":19},{"ruleId":"194","severity":1,"message":"219","line":4,"column":8,"nodeType":"196","messageId":"197","endLine":4,"endColumn":16},{"ruleId":"194","severity":1,"message":"248","line":6,"column":20,"nodeType":"196","messageId":"197","endLine":6,"endColumn":29},{"ruleId":"194","severity":1,"message":"249","line":6,"column":30,"nodeType":"196","messageId":"197","endLine":6,"endColumn":43},{"ruleId":"194","severity":1,"message":"250","line":12,"column":11,"nodeType":"196","messageId":"197","endLine":12,"endColumn":18},{"ruleId":"194","severity":1,"message":"251","line":13,"column":11,"nodeType":"196","messageId":"197","endLine":13,"endColumn":25},{"ruleId":"194","severity":1,"message":"252","line":14,"column":11,"nodeType":"196","messageId":"197","endLine":14,"endColumn":16},{"ruleId":"212","severity":1,"message":"215","line":54,"column":25,"nodeType":"214","endLine":54,"endColumn":149},{"ruleId":"212","severity":1,"message":"215","line":59,"column":25,"nodeType":"214","endLine":59,"endColumn":157},{"ruleId":"212","severity":1,"message":"215","line":64,"column":25,"nodeType":"214","endLine":64,"endColumn":162},{"ruleId":"194","severity":1,"message":"209","line":1,"column":28,"nodeType":"196","messageId":"197","endLine":1,"endColumn":36},{"ruleId":"194","severity":1,"message":"219","line":4,"column":8,"nodeType":"196","messageId":"197","endLine":4,"endColumn":16},{"ruleId":"194","severity":1,"message":"253","line":6,"column":9,"nodeType":"196","messageId":"197","endLine":6,"endColumn":19},{"ruleId":"194","severity":1,"message":"254","line":14,"column":11,"nodeType":"196","messageId":"197","endLine":14,"endColumn":23},{"ruleId":"212","severity":1,"message":"213","line":74,"column":53,"nodeType":"214","endLine":74,"endColumn":124},"no-native-reassign",["255"],"no-negated-in-lhs",["256"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'getPosts' is defined but never used.","'Signup' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["257"],"'useStore' is defined but never used.","'useSelector' is defined but never used.","'useState' is defined but never used.","'materialize' is defined but never used.","'motion' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useEffect' is defined but never used.","'materialze' is defined but never used.","'res' is assigned a value but never used.","'FileBase' is defined but never used.","'PropTypes' is defined but never used.","'butVaraints' is assigned a value but never used.","'store' is assigned a value but never used.",["258"],"React Hook useEffect has missing dependencies: 'details' and 'postStore'. Either include them or remove the dependency array. You can also do a functional update 'setDetails(d => ...)' if you only need 'details' in the 'setDetails' call.",["259"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Carousel' is defined but never used.","'postEdit' is assigned a value but never used.","'result' is assigned a value but never used.","'instances' is assigned a value but never used.","React Hook useEffect contains a call to 'setliked'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [post.likedUsers, store.uid] as a second argument to the useEffect Hook.",["260"],"no-redeclare","'element' is already defined.","redeclared","'headerOffset' is already defined.","'elementPosition' is already defined.","'offsetPosition' is already defined.","'addLike' is defined but never used.","React Hook useEffect has a missing dependency: 'comments'. Either include it or remove the dependency array.",["261"],"'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'details' and 'profileStore.dateOfBirth'. Either include them or remove the dependency array. You can also do a functional update 'setDetails(d => ...)' if you only need 'details' in the 'setDetails' call.",["262"],"React Hook useEffect has missing dependencies: 'profileStore._id', 'profileStore.dateOfBirth', 'profileStore.firstName', 'profileStore.gender', 'profileStore.lastName', 'profileStore.mobileNumber', 'profileStore.profilePicture', and 'profileStore.uid'. Either include them or remove the dependency array.",["263"],"'addFriend' is defined but never used.","'acceptRequest' is defined but never used.","'friends' is assigned a value but never used.","'friendRequests' is assigned a value but never used.","'users' is assigned a value but never used.","'getProfile' is defined but never used.","'profileStore' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},"Update the dependencies array to be: [dispatch, store]",{"range":"278","text":"279"},"Update the dependencies array to be: [dispatch]",{"range":"280","text":"281"},"Update the dependencies array to be: [details, dispatch, postEdit, postStore]",{"range":"282","text":"283"},"Add dependencies array: [post.likedUsers, store.uid]",{"range":"284","text":"285"},"Update the dependencies array to be: [comments]",{"range":"286","text":"287"},"Update the dependencies array to be: [details, profileStore.dateOfBirth]",{"range":"288","text":"289"},"Update the dependencies array to be: [profileStore._id, profileStore.dateOfBirth, profileStore.firstName, profileStore.gender, profileStore.lastName, profileStore.mobileNumber, profileStore.profilePicture, profileStore.uid]",{"range":"290","text":"291"},[1202,1209],"[dispatch, store]",[2652,2654],"[dispatch]",[3379,3399],"[details, dispatch, postEdit, postStore]",[2172,2172],", [post.likedUsers, store.uid]",[1111,1113],"[comments]",[1613,1615],"[details, profileStore.dateOfBirth]",[2424,2426],"[profileStore._id, profileStore.dateOfBirth, profileStore.firstName, profileStore.gender, profileStore.lastName, profileStore.mobileNumber, profileStore.profilePicture, profileStore.uid]"]